{"version":3,"file":"static/js/516.594a036d.chunk.js","mappings":"0KAMMA,EAAY,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OACrBC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,UAAW,CAAEC,EAAG,MAAOC,UAC7BC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAS,GAAIH,SAAA,CAER,OAAJL,QAAI,IAAJA,GAAAA,EAAMS,MACFR,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,gBAAeP,SACrC,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMS,QAGXR,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,MAAM,SAGxBb,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,WAAS,EAACC,WAAW,SAAQZ,SACd,eAAZ,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,QACHZ,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,WAAS,EAACG,MAAI,EAACF,WAAY,MAAMZ,SAAA,EACnCJ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,UAASP,SAAA,GAAAe,OAC5B,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,UAEdjB,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,KAAKU,GAAI,CAAEC,GAAI,GAAKC,GAAI,IAAOX,MAAM,gBAAeP,SAAA,GAAAe,OAC5D,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,YAIlBvB,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,MAAM,MAAMW,OAAQ,WAInC,EAGf3B,EAAU4B,aAAe,CACrBd,MAAO,WAGX,K,yUCxCMe,EAAY,CACd,MAAS,CACL,OAAU,KACV,KAAQ,QACR,IAAO,MACP,KAAQ,OAEZ,MAAS,CACL,OAAU,KACV,KAAQ,QACR,IAAO,CACH,YAAe,cAEnB,KAAQ,YAEZ,MAAS,CACL,OAAU,KACV,KAAQ,QACR,IAAO,mBACP,KAAQ,oBAEZ,OAAU,CACN,OAAU,KACV,KAAQ,SACR,IAAO,MACP,IAAO,GAEX,OAAU,CACN,OAAU,KACV,KAAQ,SACR,IAAO,CACH,YAAe,cAEnB,IAAO,GAEX,OAAU,CACN,OAAU,KACV,KAAQ,SACR,IAAO,oBACP,IAAO,GAEX,QAAW,CACP,OAAU,KACV,KAAQ,UACR,IAAO,MACP,IAAO,QAEX,SAAY,CACR,OAAU,KACV,KAAQ,WACR,IAAO,OACP,IAAO,UAKA,SAASC,EAAcV,EAAOW,GAAO,IAADC,EAAAC,EAC/C,OAAsB,QAAfD,EAAAH,EAAUE,UAAK,IAAAC,OAAA,EAAfA,EAAiBE,KAAMd,IAAwB,QAAfa,EAAAJ,EAAUE,UAAK,IAAAE,OAAA,EAAfA,EAAiBE,KAAMf,CAClE,C,iCCxCMgB,EAAW,SAAHnC,GAAoC,IAADoC,EAA7BC,EAAKrC,EAALqC,MAAOC,EAAMtC,EAANsC,OAAQC,EAAOvC,EAAPuC,QAC/BC,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BrB,EAAKuB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAWF,EAAA,GAI9BG,IAHoBC,EAAAA,EAAAA,mBAGwBC,EAAAA,EAAAA,UACxC,CAAC,aAAcb,IAAS,kBAAMc,EAAAA,EAAAA,eAAuBd,EAAO,GAAE,CAC9De,OAAQ,SAACpD,GAAI,OAAKA,EAAKqD,YAAY,EAAE,EACrCC,UAAW,SAACtD,GAAI,OAAK8C,GAAcH,EAAa,OAAJ3C,QAAI,IAAJA,OAAI,EAAJA,EAAMuD,cAAc,EAChEC,gBAAiBV,EAAa,IAAO,KAJjCW,EAAST,EAATS,UAAoBzD,GAAFgD,EAAPU,QAAaV,EAAJhD,MAQtB2D,GARiCX,EAALY,OAQjBC,EAAAA,EAAAA,cAAY,SAAC3C,GAAK,OAAKiC,EAAAA,EAAAA,mBAA2BjC,EAAM,KAEnE4C,EAAW,SAACC,GACdA,EAAEC,iBACFL,EAASM,OACL,CACIC,OAAQhD,EACRiD,cAAe7B,GAG3B,EAEA,OACIhC,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA/D,SAAA,EACIJ,EAAAA,EAAAA,KAACoE,EAAAA,EAAQ,CACLC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,iBAAkB,IAClBC,KAAc,OAARf,QAAQ,IAARA,OAAQ,EAARA,EAAUD,QAAQrD,UAExBJ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAK,CAACC,QAAS,kBAAMjB,EAASkB,OAAO,EAAEC,SAAS,QAAQzD,GAAI,CAAEP,MAAO,QAAST,SAClE,OAARsD,QAAQ,IAARA,GAAe,QAAPxB,EAARwB,EAAUC,aAAK,IAAAzB,OAAP,EAARA,EAAiB4C,aAG1B9E,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,UAAW,CAAEC,EAAG,MAAOC,UAC7BC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAS,GAAIH,SAAA,CAEZ+B,IACAnC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,gBAAeP,SACzC+B,IAGRqB,GACGxD,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,MAAM,SAEhBb,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,WAAS,EAACC,WAAW,SAAQZ,UAC/BJ,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAAAd,UACNJ,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAClB,SAAUA,EAAUmB,UAAU,OAAOC,YAAU,EAACC,aAAa,MAAK9E,UACnEC,EAAAA,EAAAA,MAAC8E,EAAAA,EAAW,CAACxB,MAAOhC,EAAcV,EAAW,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,cAAeC,OAAO,OAAO3E,QAAQ,WAAWU,GAAI,CAAEkE,EAAG,EAAGC,GAAI,EAAG1E,MAAO,QAAST,SAAA,EAC9HJ,EAAAA,EAAAA,KAACwF,EAAAA,EAAK,CACFC,GAAG,4BACHC,cACI1F,EAAAA,EAAAA,KAAC2F,EAAAA,EAAc,CAACC,QAAS/B,EAAUgC,SAAS,MAAKzF,UAC7CJ,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACP,aAAW,QACXC,KAAK,MAAK3F,UAETJ,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,QAG3B,mBAAiB,8BACjBC,WAAY,CACR,aAAc,UAElBrE,KAAK,SACLX,MAAOA,EACPiF,SAAU,SAACpC,GAAC,OAAKpB,EAASoB,EAAEqC,OAAOlF,MAAM,EACzCmF,QAAS,WAAQtD,GAAY,EAAO,EACpCuD,OAAQ,WAAQvD,GAAY,EAAM,KAEtC9C,EAAAA,EAAAA,KAACsG,EAAAA,EAAc,CAACb,GAAG,8BAA6BrF,SAAM,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,2BAUhG,EAYAtE,EAASR,aAAe,CACpBd,MAAO,WAGX,Q,kDClHA,IAMA,EANiB,SAAHb,GAA2B,IACrC0G,ECIW,SAA6Bf,IACvBgB,EAAAA,EAAAA,MAAjB,IACMC,GAAWC,EAAAA,EAAAA,MAEjB5D,GAAqCE,EAAAA,EAAAA,UACjC,CAAC,UAAWwC,IAAK,kBAAMvC,EAAAA,EAAAA,eAAuBuC,EAAG,GAAE,CACnDtC,OAAQ,SAACpD,GAAI,OAAKA,EAAKqD,YAAY,EAAE,EACrCG,gBAAiB,IACjBqD,QAAS,SAAC9C,GACFA,aAAa+C,EAAAA,GACI,OAAb/C,EAAEgD,SACFJ,GAASK,EAAAA,EAAAA,OACRC,EAAAA,GAGb,IAIJ,MAAO,CAAExD,UAfQT,EAATS,UAeYC,QAfMV,EAAPU,QAeU1D,KAfGgD,EAAJhD,KAgBhC,CDxByCkH,CADRnH,EAAboH,eACYnH,GAAXyG,EAAThD,UAAkBgD,EAAP/C,QAAa+C,EAAJzG,MAE5B,OAAQC,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAACE,KAAMA,GAC7B,E,mEEMMoH,EAAmB,CACrBC,MAAO,CACH5F,OAAQ,IACRI,KAAM,OACNyF,QAAS,CACLC,MAAM,IAGdC,WAAY,CACRC,SAAS,GAEbC,OAAQ,CACJC,MAAO,SACP7G,MAAO,GAEX8G,KAAM,CACFC,gBAAiB,IAkHzB,EA5GsB,SAAH9H,GAA6B,IAAvB+H,EAAS/H,EAAT+H,UAAWrH,EAAIV,EAAJU,KAC1BsH,GAAQC,EAAAA,EAAAA,KAENC,EAAcF,EAAMG,QAAQC,KAA5BF,UACFG,EAAOL,EAAMG,QAAQG,QAE3B9F,GAA8BC,EAAAA,EAAAA,UAAS4E,GAAiB3E,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD+F,EAAO7F,EAAA,GAAE8F,EAAU9F,EAAA,GAE1BG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjC4F,EAAM3F,EAAA,GAAE4F,EAAS5F,EAAA,GAExBG,GAA+BE,EAAAA,EAAAA,UAC3B,CAAC,YAAa4E,IAAY,kBAAM3E,EAAAA,EAAAA,WAAmB2E,EAAU,GAC7D,CACI1E,OAAQ,SAACpD,GAAI,OAAKA,EAAK0I,OAAO,EAC9BC,sBAAsB,EACtBrF,UAAW,SAACtD,GACR,IAAM4I,EAAgB,OAAJ5I,QAAI,IAAJA,OAAI,EAAJA,EAAM6I,KAAI,SAACC,GACzB,MAAO,CAACA,EAAQC,KAAMD,EAAQE,IAClC,IACAC,QAAQC,IAAIN,GACZH,EAAU,CACN,CACIhI,KAAAA,EACAT,KAAM4I,IAGlB,EACAnB,UAAWK,IAjBF9E,EAATS,UAAkBT,EAAPU,QA+FnB,OA1EAyF,EAAAA,EAAAA,YAAU,WACNZ,GAAW,SAACa,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAS,IACZ/B,MAAO,CACH3B,GAAI,gBACJ7D,KAAM,OACNf,MAAO,OACPwI,KAAM,CACFC,gBAAgB,GAEpBC,OAAQ,CAGJ,GAIRC,OAAQ,CAAC1B,EAAMG,QAAQwB,QAAQC,MAC/BC,MAAO,CACH/H,KAAM,WACNgI,WAAY,EACZC,cAAe,UACfC,OAAQ,CACJC,MAAO,CACHP,OAAQ,CACJxB,IAGRgC,cAAc,EACdC,UAAW,SAAUhJ,GAEjB,MAAM,GAANE,OAAU+I,IAAOjJ,GAAOkJ,OAAO,cAAa,KAAAhJ,OAAI+I,IAAOjJ,GAAOkJ,OAAO,YACzE,GAIJC,WAAY,CACR9C,MAAM,EACN3G,MAAOwH,IAWfkC,MAAO,CACHP,OAAQ,CACJC,MAAO,CACHP,OAAQ,CAACxB,MAIrBL,KAAM,CACF2C,YAAanC,EACboC,QAAS,CACLC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,KAGdC,QAAS,CACL9C,MAAO,SAEX+C,OAAQ,CACJ3C,KAAM,uJACT,GAET,GAAG,KAEIlI,EAAAA,EAAAA,KAAC8K,EAAAA,EAAc,CAACzC,QAASA,EAASE,OAAQA,EAAQ3G,KAAK,OAAOJ,OAAQ,KACjF,EC5Ie,SAASuJ,EAAiBhL,GACrC,IAAIiL,EAAMC,OAAOC,OAAO,GAAInL,GAC5BiL,EAAIG,UAEJ,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIL,EAAIM,OAAQD,IAC5B,GAAIL,EAAIK,GAAGvE,OACP,IAAK,IAAIyE,EAAI,EAAIF,EAAGE,EAAIP,EAAIM,OAAQC,IAAK,CACrC,IAAKP,EAAIO,GAAGzE,QAAWkE,EAAIK,GAAGG,MAAQR,EAAIO,GAAGC,IAAM,CAC/CJ,EAAKK,MAAIrC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI4B,EAAIK,IAAE,IAAEK,MAAOV,EAAIO,GAAGzC,QACrC,KACJ,CACIyC,IAAMP,EAAIM,OAAS,IACnBF,EAAKK,MAAIrC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI4B,EAAIK,IAAE,IAAEK,MAAO,QAC9B1C,QAAQC,KAAI,GAEpB,CAGR,OAAOmC,EAAKD,SAChB,CCqBA,ICMA,GA1CkBQ,EALUC,EAAQ,KAA5BC,SACWD,EAAQ,MAAnBE,OAIUH,EAAe,SAAA7L,GAAA,IAAGgI,EAAKhI,EAALgI,MAAK,MAAQ,CAC7CjH,MAAO,GACPW,OAAQ,GACR+I,QAAS,EACTwB,QAAS,OACT,WAAY,CACR,qBAAsB,CAClBlL,MAAO,MAEX,sCAAuC,CACnCmL,UAAW,qBAGnB,0BAA2B,CACvBzB,QAAS,EACT,gBAAiB,CACbyB,UAAW,mBACXrL,MAAO,OACP,uBAAwB,CACpBsL,QAAS,EACTC,gBAAwC,SAAvBpE,EAAMG,QAAQkE,KAAkB,UAAY,aAIzE,qBAAsB,CAClBC,UAAW,iCACXvL,MAAO,GACPW,OAAQ,GACR6K,aAAc,GACdC,WAAYxE,EAAMyE,YAAYC,OAAO,CAAC,SAAU,CAC5CC,SAAU,OAGlB,qBAAsB,CAClBJ,aAAc,GACdJ,QAAS,EACTC,gBAC2B,SAAvBpE,EAAMG,QAAQkE,KAAkB,wBAA0B,kBAC9DO,UAAW,cAElB,I,+BCyDD,GAhGkB,SAAH5M,GAA2B,IAAf6M,EAAO7M,EAAb8M,KACjBtK,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BuK,GAAFrK,EAAA,GAAiBA,EAAA,IACpCG,GAAoCJ,EAAAA,EAAAA,UAAS,CAAC,GAAEK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzCmK,EAAUlK,EAAA,GAAEmK,EAAanK,EAAA,GAQ1BoK,EAAa,SAAClE,GAAI,OAAKoB,IAAOpB,GAAMqB,OAAO,sBAAuB,EAElEpK,GAAOkN,EAAAA,EAAAA,UAAQ,kBACjBN,EAAQ/D,KAAI,SAACsE,GAAS,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY8D,GAAE,IAAEC,WAAYH,EAAWE,EAAGpE,MAAOsE,YAAaJ,EAAWE,EAAGxB,OAAQ2B,SAAUH,EAAGxB,MAAQwB,EAAGpE,KAAMwE,gBAAgBC,EAAAA,GAAAA,KAAqBL,EAAGxB,MAAQwB,EAAGpE,MAAQ,MAAS,GAAE,GAC9M,CAAC6D,IAkBCa,EAAU,CACZ,CACIrL,MAAO,2BACPsL,UAAW,aACXC,IAAK,OACL7M,MAAO,IACP8M,MAAO,SACPC,OAAQ,SAACC,EAAGC,GAAC,OAAKD,EAAE/E,KAAOgF,EAAEhF,IAAI,EACjCiF,UAAoC,SAAzBjB,EAAWkB,UAAuBlB,EAAWmB,MAAQ,MAIpE,CACI9L,MAAO,yDACPsL,UAAW,UACXC,IAAK,UACL7M,MAAO,IACPqN,QAAS,CACL,CAAEhG,KAAM,0NAA4CjH,MAAO,2NAC3D,CAAEiH,KAAM,4JAAgCjH,MAAO,8JAGnDkN,SAAU,SAAClN,EAAOmN,GAAM,OAAKA,EAAOtJ,QAAQuJ,SAASpN,EAAM,EAC3D2M,OAAQ,SAACC,EAAGC,GAAC,OAAKD,EAAE/I,QAAQwG,OAASwC,EAAEhJ,QAAQwG,MAAM,EACrDyC,UAAoC,YAAzBjB,EAAWkB,UAA0BlB,EAAWmB,MAAQ,MAGvE,CACI9L,MAAO,gHACPsL,UAAW,cACXC,IAAK,QACL7M,MAAO,IACP8M,MAAO,SACPC,OAAQ,SAACC,EAAGC,GAAC,OAAKD,EAAEnC,MAAQoC,EAAEpC,KAAK,EACnCqC,UAAoC,UAAzBjB,EAAWkB,UAAwBlB,EAAWmB,MAAQ,MAGrE,CACI9L,MAAO,4EACPsL,UAAW,iBACXC,IAAK,WACL7M,MAAO,IACP8M,MAAO,SACPC,OAAQ,SAACC,EAAGC,GAAC,OAAKD,EAAER,SAAWS,EAAET,QAAQ,EACzCU,UAAoC,aAAzBjB,EAAWkB,UAA2BlB,EAAWmB,MAAQ,OAK5E,OACIjO,EAAAA,EAAAA,KAACsO,EAAAA,EAAK,CACFC,OAAQC,GAAAA,EAAAA,MACRhB,QAASA,EACTiB,WAAY1O,EACZmG,SAlFa,SAACwI,EAAYR,EAASN,GACvC5E,QAAQC,IAAI,qBAAsByF,EAAYR,EAASN,GACvDf,EAAgBqB,GAChBnB,EAAca,EAClB,EA+EQe,KAAK,SACLD,YAAY,EACZE,OAAQ,CAAEC,EAAG,IAAKC,EAAG,KACrBC,YAAY,QAIxB,ECrEMtJ,GAAK,2BA2SX,GAzSiB,WACb,IAAAnD,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvC0M,EAAQxM,EAAA,GAAEyM,EAAWzM,EAAA,GAC5BG,GAAgCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAvCuM,EAAQtM,EAAA,GAAEuM,EAAWvM,EAAA,GACtB6B,EAAO2K,QAAQJ,GACflH,GAAQC,EAAAA,EAAAA,KACdsH,GAAgC9M,EAAAA,EAAAA,UAAS,MAAK+M,GAAA7M,EAAAA,EAAAA,GAAA4M,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA4BlN,EAAAA,EAAAA,UAAS,MAAKmN,GAAAjN,EAAAA,EAAAA,GAAAgN,EAAA,GAAnCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCtN,EAAAA,EAAAA,UAAS,CACvCuN,UAAWC,KAAKC,MAAQ,KACxBC,OAAQ,KACRxK,GAAI,6BACNyK,GAAAzN,EAAAA,EAAAA,GAAAoN,EAAA,GAJKhI,EAASqI,EAAA,GAAEC,EAAYD,EAAA,GAQhBE,GAAcnN,EAAAA,EAAAA,UACxB,CAAC,gBAAiBwC,KAAK,kBAAMvC,EAAAA,EAAAA,gBAAwBuC,GAAG,GACxD,CACItC,OAAQ,SAACpD,GAEL,OAAOA,EAAKsQ,YAChB,EACA3H,sBAAsB,EACtBlB,SAAS,EACTjE,gBAAiB,MATjBxD,KA+BRuQ,GAAyB/N,EAAAA,EAAAA,WAAS,GAAKgO,IAAA9N,EAAAA,EAAAA,GAAA6N,EAAA,GAA3BC,GAAA,GAASA,GAAA,GAErB,OAEIlQ,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,WAAS,EAACyP,WAAY,IAAKC,cAAe,KAAKrQ,SAAA,EAEjDJ,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAItP,GAAI,CACnBE,IAAM,MACRlB,UACEJ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAC,yFAE7BJ,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEzQ,UACnCJ,EAAAA,EAAAA,KAAC8Q,EAAQ,CAAC5J,cAAe,gCAK7BlH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEzQ,UACnCJ,EAAAA,EAAAA,KAACiC,EAAQ,CAACG,OAAQ,2BAA4BC,QAAS,gCAE3DrC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEzQ,UACnCJ,EAAAA,EAAAA,KAAC8Q,EAAQ,CAAC5J,cAAe,gCAI7BlH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEzQ,UACnCJ,EAAAA,EAAAA,KAAC8Q,EAAQ,CAAC5J,cAAe,gCAE7BlH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEzQ,UACnCJ,EAAAA,EAAAA,KAAC8Q,EAAQ,CAAC5J,cAAe,gCAE7BlH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEzQ,UACnCJ,EAAAA,EAAAA,KAAC8Q,EAAQ,CAAC5J,cAAe,gCAE7BlH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEzQ,UACnCJ,EAAAA,EAAAA,KAAC8Q,EAAQ,CAAC5J,cAAe,gCAG7BlH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAGzQ,UAC9BC,EAAAA,EAAAA,MAACJ,EAAAA,EAAQ,CAAC8Q,SAAS,EAAM3Q,SAAA,EACrBC,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,WAAS,EAACiQ,eAAgB,QAAQ5Q,SAAA,EACpCJ,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACP,aAAW,OACXL,GAAG,cACH,gBAAehB,EAAO,iBAAcwM,EACpC,gBAAexM,EAAO,YAASwM,EAC/B,gBAAc,OACdrL,QAjEJ,SAACsL,GACjBjC,EAAYiC,EAAMC,cACtB,EAgEwBxC,KAAK,KAAIvO,SAERqE,GAAOzE,EAAAA,EAAAA,KAACoR,EAAAA,EAAa,KAAMpR,EAAAA,EAAAA,KAACqR,EAAAA,EAAY,OAE7CrR,EAAAA,EAAAA,KAACsR,EAAAA,EAAI,CACD7L,GAAG,YACH8L,cAAe,CACX,kBAAmB,eAEvBvC,SAAUA,EACVvK,KAAMA,EACNE,QA1EJ,WAChBsK,EAAY,KAChB,EAyEwBuC,WAAY,CACRzH,MAAO,CACHQ,QAAS,KAIfnK,UAEFC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAS,EAAEH,SAAA,EACdJ,EAAAA,EAAAA,KAACyR,EAAAA,EAAS,CACNhM,GAAG,iBACHiM,YAAY,mBACZ9P,KAAK,iBACLR,GAAI,CAAEP,MAAO,KACb8Q,gBAAiB,CACbC,QAAQ,GAEZ3Q,MAAOsO,EACPrJ,SAAU,SAACpC,GAAC,OAAK0L,EAAY1L,EAAEqC,OAAOlF,MAAM,KAEhDjB,EAAAA,EAAAA,KAACyR,EAAAA,EAAS,CACNhM,GAAG,iBACHiM,YAAY,mBACZ9P,KAAK,iBACLR,GAAI,CAAEP,MAAO,KACb8Q,gBAAiB,CACbC,QAAQ,GAEZ3Q,MAAO0O,EACPzJ,SAAU,SAACpC,GAAC,OAAK8L,EAAU9L,EAAEqC,OAAOlF,MAAM,KAE9CjB,EAAAA,EAAAA,KAAC6R,EAAAA,EAAM,CACHjQ,KAAK,SACLlB,QAAQ,WACRC,MAAM,UACNiF,QA1GX,SAAC9B,GAClBA,EAAEC,iBACFoM,GAAY/G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACPvB,GAAS,IACZiI,UAAW,IAAIC,KAAKR,GAAUuC,UAC9B7B,OAAQ,IAAIF,KAAKJ,GAAQmC,UAAY,IAAI/B,KAAKR,GAAUuC,YAGhE,EAkGsD1R,SACzB,oEAObJ,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAC3D,GAAI,CAAE2Q,GAAI,EAAGC,GAAI,GAAI5R,UACtBJ,EAAAA,EAAAA,KAACiS,EAAa,CAACpK,UAAWA,EAAWrH,KAAM,yHAKvDR,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIE,GAAI,GAAIC,GAAI,EAAEzQ,UAC7BJ,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAAC8Q,SAAS,EAAM3Q,UACrBC,EAAAA,EAAAA,MAAC6R,EAAAA,EAAI,CACDlN,UAAU,MACV5D,GAAI,CACA+Q,GAAI,EACJC,GAAI,GACNhS,SAAA,EAGFC,EAAAA,EAAAA,MAACgS,EAAAA,GAAQ,CAACjR,GAAI,CACVI,OAAQ,IACT4G,SAAO,EAAAhI,SAAA,EACNJ,EAAAA,EAAAA,KAACsS,EAAAA,EAAY,CAAC7I,SAASzJ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,YAAWN,SAAC,2HACvDJ,EAAAA,EAAAA,KAACuS,EAAAA,EAAc,CAAAnS,UAEXJ,EAAAA,EAAAA,KAACwS,EAAS,CAAC5M,QAAS,WAAQuJ,GAAaD,EAAU,UAG3D7O,EAAAA,EAAAA,MAACgS,EAAAA,GAAQ,CAACjR,GAAI,CACVI,OAAQ,IACT4G,SAAO,EAAAhI,SAAA,EACNJ,EAAAA,EAAAA,KAACsS,EAAAA,EAAY,CAAC7I,SAASzJ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,YAAWN,SAAC,0IACvDJ,EAAAA,EAAAA,KAACuS,EAAAA,EAAc,CAAAnS,UACXJ,EAAAA,EAAAA,KAACyS,EAAAA,EAAM,CAEHrR,GAAI,CACAsR,QAASxD,EAAWpH,EAAMG,QAAQ0K,QAAQjJ,KAAO5B,EAAMG,QAAQtE,MAAM+F,MACvEtJ,SAED8O,GAAWlP,EAAAA,EAAAA,KAAC4S,EAAAA,EAAa,KAAM5S,EAAAA,EAAAA,KAAC6S,EAAAA,EAAY,YAIzDxS,EAAAA,EAAAA,MAACgS,EAAAA,GAAQ,CAACjR,GAAI,CACVI,OAAQ,IACT4G,SAAO,EAAAhI,SAAA,EACNJ,EAAAA,EAAAA,KAACsS,EAAAA,EAAY,CAAC7I,SAASzJ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,YAAWN,SAAC,0IACvDJ,EAAAA,EAAAA,KAACuS,EAAAA,EAAc,CAAAnS,UACXJ,EAAAA,EAAAA,KAACyS,EAAAA,EAAM,CAEHrR,GAAI,CACAsR,QAASxD,EAAWpH,EAAMG,QAAQ0K,QAAQjJ,KAAO5B,EAAMG,QAAQtE,MAAM+F,MACvEtJ,SAED8O,GAAWlP,EAAAA,EAAAA,KAAC4S,EAAAA,EAAa,KAAM5S,EAAAA,EAAAA,KAAC6S,EAAAA,EAAY,mBAQrE7S,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACI,MAAI,EAACwP,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAGzQ,UAC9BJ,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAAC8Q,SAAS,EAAM3Q,UAErBJ,EAAAA,EAAAA,KAAC+E,EAAAA,EAAG,CAAA3E,UACU,OAATgQ,QAAS,IAATA,OAAS,EAATA,EAAW9E,QAAS,IAAKtL,EAAAA,EAAAA,KAAC8S,GAAS,CAAClG,KAAM7B,EAAiBqF,aAkFpF,C,6FC/TO,SAAS2C,EAAUC,GACvB,IAAIC,EAAIC,KAAKC,MAAMH,EAAY,MAG/B,MAAO,CAACC,EAFAC,KAAKC,MAAMH,EAAY,IAAW,GAAJC,EAC9BC,KAAKC,MAAMH,EAAY,IAElC,CAEO,SAASI,EAASnP,EAAQoP,GAC9B,IAAIC,EAAW,GAGf,OADKA,EAASrP,KAASqP,EAASrP,GAAUA,EAAS,IAAM,GAAKA,EAAS,IAAM,GAAK,EADpE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACiEiP,KAAKlR,IAAIiC,EAAS,GAAI,KAC9GoP,EAAOC,EAASrP,GAC1B,CAEO,SAASsP,EAAoBP,GACjC,IAAAQ,EAAkBT,EAAUC,GAAUS,GAAAhR,EAAAA,EAAAA,GAAA+Q,EAAA,GAA/BP,EAACQ,EAAA,GAAEnO,EAACmO,EAAA,GAAEC,EAACD,EAAA,GACVE,EAAc,GAWlB,OAVIV,EAAI,IACLU,EAAcV,EAAI,IAAMG,EAASH,EAAG,CAAC,qBAAO,2BAAQ,oCAEnD3N,EAAI,IACLqO,GAAe,IAAMrO,EAAI,IAAM8N,EAAS9N,EAAG,CAAC,uCAAU,uCAAU,oCAE/DoO,EAAI,GAAW,IAANT,IACVU,GAAe,IAAMD,EAAI,IAAMN,EAASM,EAAG,CAAC,6CAAW,6CAAW,0CAG9DC,CACV,CAEO,SAASpG,EAAmByF,GAChC,IAvCiCY,EAASC,EAuC1CC,EAAkBf,EAAUC,GAAUe,GAAAtR,EAAAA,EAAAA,GAAAqR,EAAA,GAA/Bb,EAACc,EAAA,GAAEzO,EAACyO,EAAA,GAAEL,EAACK,EAAA,GACd,OAxCiCH,EAwCTtO,EAxCkBuO,EAwCfH,EAvCnB,CAuCaT,EAtCbe,WAAWC,SAAS,EAAG,KAC5BL,EAAQI,WAAWC,SAAS,EAAG,KAC/BJ,EAAQG,WAAWC,SAAS,EAAG,MAChCC,KAAK,IAoCV,C","sources":["components/cards/ValueBox/ValueCard.js","utils/validateValue.js","components/cards/InputBox/index.js","components/cards/ValueBox/index.js","utils/hooks/useQueryProgramPack.js","components/charts/TimeAreaChart.js","utils/archiveAlarmSort.js","components/tables/AlarmTable.js","pages/testPage/AntSwitch.js","components/tables/SortTable.js","pages/testPage/index.js","utils/timeFormatter.js"],"sourcesContent":["// material-ui\r\nimport { Grid, Skeleton, Stack, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\n\r\nconst ValueCard = ({ data }) => (\r\n    <MainCard contentSX={{ p: 2.25 }}>\r\n        <Stack spacing={0.5}>\r\n            {\r\n                data?.name ?\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {data?.name}\r\n                    </Typography>\r\n                    :\r\n                    <Skeleton width=\"80%\" />\r\n            }\r\n\r\n            <Grid container alignItems=\"center\">\r\n                {data?.value !== 'undefined' ?\r\n                    <Grid container item alignItems={'end'}>\r\n                        <Typography variant=\"h4\" color=\"inherit\">\r\n                            {`${data?.value}`}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" sx={{ ml: 0.5, mb: 0.1 }} color=\"textSecondary\">\r\n                            {`${data?.unit}`}\r\n                        </Typography>\r\n                    </Grid>\r\n                    :\r\n                    <Skeleton width=\"40%\" height={30} />\r\n                }\r\n            </Grid>\r\n        </Stack>\r\n    </MainCard>\r\n);\r\n\r\nValueCard.defaultProps = {\r\n    color: 'primary'\r\n};\r\n\r\nexport default ValueCard;\r\n","const typeValue = {\r\n    \"Int16\": {\r\n        \"signed\": \"16\",\r\n        \"name\": \"Int16\",\r\n        \"max\": 32768,\r\n        \"min\": -32768\r\n    },\r\n    \"Int32\": {\r\n        \"signed\": \"32\",\r\n        \"name\": \"Int32\",\r\n        \"max\": {\r\n            \"$numberLong\": \"2147483648\"\r\n        },\r\n        \"min\": -2147483648\r\n    },\r\n    \"Int64\": {\r\n        \"signed\": \"64\",\r\n        \"name\": \"Int64\",\r\n        \"max\": 92233720368547760000,\r\n        \"min\": -92233720368547760000\r\n    },\r\n    \"Uint16\": {\r\n        \"signed\": \"16\",\r\n        \"name\": \"Uint16\",\r\n        \"max\": 65535,\r\n        \"min\": 0\r\n    },\r\n    \"Uint32\": {\r\n        \"signed\": \"32\",\r\n        \"name\": \"Uint32\",\r\n        \"max\": {\r\n            \"$numberLong\": \"4294967295\"\r\n        },\r\n        \"min\": 0\r\n    },\r\n    \"Uint64\": {\r\n        \"signed\": \"64\",\r\n        \"name\": \"Uint64\",\r\n        \"max\": 18446744073709552000,\r\n        \"min\": 0\r\n    },\r\n    \"Float32\": {\r\n        \"signed\": \"32\",\r\n        \"name\": \"Float32\",\r\n        \"max\": 3.4e+38,\r\n        \"min\": 3.4e-38\r\n    },\r\n    \"Double64\": {\r\n        \"signed\": \"64\",\r\n        \"name\": \"Double64\",\r\n        \"max\": 1.7e+308,\r\n        \"min\": 1.7e-308\r\n    }\r\n}\r\n\r\n\r\nexport default function validateValue(value, type) {\r\n    return typeValue[type]?.max < value || typeValue[type]?.min > value;\r\n}","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Alert, Box, Chip, FormControl, FormHelperText, Grid, IconButton, Input, InputAdornment, Skeleton, Snackbar, Stack, TextField, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\n\r\n// assets\r\nimport { EnterOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport validateValue from 'utils/validateValue';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport Service from 'API/Service';\r\n\r\n// ==============================|| Input Box  ||============================== //\r\n\r\n\r\nconst InputBox = ({ title, idRead, idWrite }) => {\r\n    const [value, setValue] = useState(0);\r\n    const [isNotFocus, setNotFocus] = useState(true);\r\n    const queryClient = useQueryClient();\r\n\r\n\r\n    const { isLoading, isError, data, error } = useQuery(\r\n        ['inputValue', idRead], () => Service.getProgramPack(idRead), {\r\n        select: (data) => data.programPack[0],\r\n        onSuccess: (data) => isNotFocus && setValue(data?.lastAnswerDec),\r\n        refetchInterval: isNotFocus ? 5000 : 0,\r\n    });\r\n\r\n\r\n    const mutation = useMutation((value) => Service.sendNumberToDevice(value));\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        mutation.mutate(\r\n            {\r\n                number: value,\r\n                programPackId: idWrite\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                autoHideDuration={1000}\r\n                open={mutation?.isError}\r\n            >\r\n                <Alert onClose={() => mutation.reset()} severity=\"error\" sx={{ width: '100%' }}>\r\n                    {mutation?.error?.message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <MainCard contentSX={{ p: 2.25 }}>\r\n                <Stack spacing={0.5}>\r\n                    {\r\n                        title &&\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                            {title}\r\n                        </Typography>\r\n                    }\r\n                    {isLoading ?\r\n                        <Skeleton width=\"80%\" />\r\n                        :\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Box onSubmit={onSubmit} component=\"form\" noValidate autoComplete=\"off\">\r\n                                    <FormControl error={validateValue(value, data?.variableType)} margin=\"none\" variant=\"standard\" sx={{ m: 0, mt: 0, width: '100%' }}>\r\n                                        <Input\r\n                                            id=\"standard-adornment-weight\"\r\n                                            endAdornment={\r\n                                                <InputAdornment onClick={onSubmit} position=\"end\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"enter\"\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        {<EnterOutlined />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>}\r\n                                            aria-describedby=\"standard-weight-helper-text\"\r\n                                            inputProps={{\r\n                                                'aria-label': 'weight',\r\n                                            }}\r\n                                            type=\"number\"\r\n                                            value={value}\r\n                                            onChange={(e) => setValue(e.target.value)}\r\n                                            onFocus={() => { setNotFocus(false) }}\r\n                                            onBlur={() => { setNotFocus(true) }}\r\n                                        />\r\n                                        <FormHelperText id=\"standard-weight-helper-text\">{data?.nameData}</FormHelperText>\r\n                                    </FormControl>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </Stack>\r\n            </MainCard>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nInputBox.propTypes = {\r\n    color: PropTypes.string,\r\n    title: PropTypes.string,\r\n    count: PropTypes.string,\r\n    percentage: PropTypes.number,\r\n    isLoss: PropTypes.bool,\r\n    extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\r\n};\r\n\r\nInputBox.defaultProps = {\r\n    color: 'primary'\r\n};\r\n\r\nexport default InputBox;\r\n","import ValueCard from './ValueCard';\r\nimport useQueryProgramPack from 'utils/hooks/useQueryProgramPack';\r\n\r\nconst ValueBox = ({ idProgramPack }) => {\r\n    const { isLoading, isError, data } = useQueryProgramPack(idProgramPack);\r\n\r\n    return (<ValueCard data={data} />);\r\n}\r\n\r\nexport default ValueBox;\r\n\r\n","import Service from 'API/Service';\r\nimport { useQuery } from 'react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { removeUser } from 'store/reducers/user';\r\nimport { ReadError } from 'utils/customErrors';\r\n\r\n\r\nexport default function useQueryProgramPack(id) {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isLoading, isError, data } = useQuery(\r\n        ['devices', id], () => Service.getProgramPack(id), {\r\n        select: (data) => data.programPack[0],\r\n        refetchInterval: 1000,\r\n        onError: (e) => {\r\n            if (e instanceof ReadError) {\r\n                if (e.status === 1004) {\r\n                    dispatch(removeUser());\r\n                    <Navigate to=\"/login\" state={{ from: location }} replace />\r\n                }\r\n            }\r\n        }\r\n    }\r\n    );\r\n\r\n    return { isLoading, isError, data };\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { useQuery } from 'react-query';\r\nimport Service from 'API/Service';\r\nimport moment from 'moment';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 450,\r\n        type: 'area',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 2\r\n    },\r\n    grid: {\r\n        strokeDashArray: 0\r\n    }\r\n};\r\n// ==============================|| INCOME AREA CHART ||============================== //\r\n\r\n\r\nconst TimeAreaChart = ({ queryData, name }) => {\r\n    const theme = useTheme();\r\n\r\n    const { secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n\r\n    const [series, setSeries] = useState([]);\r\n    // console.log(queryData);\r\n    const { isLoading, isError } = useQuery(\r\n        ['chartData', queryData], () => Service.getArchive(queryData),\r\n        {\r\n            select: (data) => data.archive,\r\n            refetchOnWindowFocus: false,\r\n            onSuccess: (data) => {\r\n                const chartData = data?.map((element) => {\r\n                    return [element.date, element.dec];\r\n                })\r\n                console.log(chartData);\r\n                setSeries([\r\n                    {\r\n                        name,\r\n                        data: chartData\r\n                    },\r\n                ])\r\n            },\r\n            enabled: !!queryData\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            chart: {\r\n                id: 'area-datetime',\r\n                type: 'area',\r\n                width: \"100%\",\r\n                zoom: {\r\n                    autoScaleYaxis: true\r\n                },\r\n                events: {\r\n                    // markerClick: function (event, chartContext, { seriesIndex, dataPointIndex, config }) {\r\n                    //     console.log(event, chartContext.data.twoDSeries[dataPointIndex], seriesIndex, dataPointIndex, config);\r\n                    // }\r\n                }\r\n            },\r\n\r\n            colors: [theme.palette.primary.main],\r\n            xaxis: {\r\n                type: 'datetime',\r\n                tickAmount: 4,\r\n                tickPlacement: 'between',\r\n                labels: {\r\n                    style: {\r\n                        colors: [\r\n                            secondary\r\n                        ]\r\n                    },\r\n                    rotateAlways: false,\r\n                    formatter: function (value) {\r\n\r\n                        return `${moment(value).format('DD.MM.YYYY')} ${moment(value).format('HH:mm:ss')}`;\r\n                    },\r\n\r\n\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: line\r\n                },\r\n                // axisTicks: {\r\n                //     show: true,\r\n                //     borderType: 'solid',\r\n                //     color: '#78909C',\r\n                //     height: 6,\r\n                //     offsetX: 0,\r\n                //     offsetY: 0\r\n                // },\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line,\r\n                padding: {\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    left: 15\r\n                },\r\n            },\r\n            tooltip: {\r\n                theme: 'light',\r\n            },\r\n            noData: {\r\n                text: \"Выберите временной отрезок\"\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\r\n};\r\n\r\nexport default TimeAreaChart;\r\n","\r\nexport default function archiveAlarmSort(data) {\r\n    let arr = Object.assign([], data);\r\n    arr.reverse();\r\n    let arr2 = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].status) {\r\n            for (let j = 0 + i; j < arr.length; j++) {\r\n                if (!arr[j].status && (arr[i].bit === arr[j].bit)) {\r\n                    arr2.push({ ...arr[i], date2: arr[j].date });\r\n                    break;\r\n                }\r\n                if (j === arr.length - 1) {\r\n                    arr2.push({ ...arr[i], date2: null });\r\n                    console.log(true)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return arr2.reverse();\r\n}","import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\r\nimport moment from \"moment\";\r\n\r\nfunction AlarmTable({ rows }) {\r\n    console.log(rows)\r\n    return (\r\n        <TableContainer sx={{ maxHeight: 450 }} component={Paper}>\r\n            <Table stickyHeader aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align={'center'}>Время</TableCell>\r\n                        <TableCell align={'center'}>Дата</TableCell>\r\n                        <TableCell>Сообщение</TableCell>\r\n                        <TableCell align={'center'}>Время <br />восстановление</TableCell>\r\n                        <TableCell align={'center'}>Дата <br />восстановления</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows?.map((row) => {\r\n                        return (\r\n                            <TableRow\r\n                                key={row._id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n\r\n                            >\r\n                                <TableCell align={'center'}>{moment(row.date).format('HH:mm:ss')}</TableCell>\r\n                                <TableCell align={'center'}>{moment(row.date).format('DD.MM.YYYY')}</TableCell>\r\n                                <TableCell>{row.message}</TableCell>\r\n                                <TableCell align={'center'}>{row.date2 ? moment(row.date2).format('HH:mm:ss') : \"-\"}</TableCell>\r\n                                <TableCell align={'center'}>{row.date2 ? moment(row.date2).format('DD.MM.YYYY') : \"-\"}</TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer >\r\n    );\r\n}\r\n\r\n\r\nexport default AlarmTable;","const { default: styled } = require(\"@emotion/styled\");\r\nconst { Switch } = require(\"@mui/material\");\r\n\r\n\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 28 * 2.5,\r\n    height: 16 * 2,\r\n    padding: 0,\r\n    display: 'flex',\r\n    '&:active': {\r\n        '& .MuiSwitch-thumb': {\r\n            width: 15 * 2.5,\r\n        },\r\n        '& .MuiSwitch-switchBase.Mui-checked': {\r\n            transform: 'translateX(25px)',\r\n        },\r\n    },\r\n    '& .MuiSwitch-switchBase': {\r\n        padding: 2 * 2,\r\n        '&.Mui-checked': {\r\n            transform: 'translateX(38px)',\r\n            color: '#fff',\r\n            '& + .MuiSwitch-track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff',\r\n            },\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n        width: 12 * 2,\r\n        height: 12 * 2,\r\n        borderRadius: 6 * 2,\r\n        transition: theme.transitions.create(['width'], {\r\n            duration: 200,\r\n        }),\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 16 * 2 / 2,\r\n        opacity: 1,\r\n        backgroundColor:\r\n            theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n        boxSizing: 'border-box',\r\n    },\r\n}));\r\n\r\nexport default AntSwitch;","import React, { useMemo, useState } from 'react';\r\nimport { Table } from 'antd';\r\nimport moment from 'moment';\r\nimport ruRu from 'antd/locale/ru_RU';\r\nimport { timeFormattedColon } from 'utils/timeFormatter';\r\n\r\nconst SortTable = ({ rows: rawData }) => {\r\n    const [filteredInfo, setFilteredInfo] = useState({});\r\n    const [sortedInfo, setSortedInfo] = useState({});\r\n\r\n    const handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setFilteredInfo(filters);\r\n        setSortedInfo(sorter);\r\n    };\r\n\r\n    const formatDate = (date) => moment(date).format('HH:mm:ss DD.MM.YYYY');\r\n\r\n    const data = useMemo(() =>\r\n        rawData.map((el) => { return { ...el, dateFormat: formatDate(el.date), date2Format: formatDate(el.date2), timeStop: el.date2 - el.date, timeStopFormat: timeFormattedColon(((el.date2 - el.date) / 1000)) } }),\r\n        [rawData]);\r\n\r\n    // const clearFilters = () => {\r\n    //     setFilteredInfo({});\r\n    // };\r\n\r\n    // const clearAll = () => {\r\n    //     setFilteredInfo({});\r\n    //     setSortedInfo({});\r\n    // };\r\n\r\n    // const setAgeSort = () => {\r\n    //     setSortedInfo({\r\n    //         order: 'descend',\r\n    //         columnKey: 'age',\r\n    //     });\r\n    // };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Дата',\r\n            dataIndex: 'dateFormat',\r\n            key: 'date',\r\n            width: 150,\r\n            align: 'center',\r\n            sorter: (a, b) => a.date - b.date,\r\n            sortOrder: sortedInfo.columnKey === 'date' ? sortedInfo.order : null,\r\n\r\n            // ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Сообщения',\r\n            dataIndex: 'message',\r\n            key: 'message',\r\n            width: 300,\r\n            filters: [\r\n                { text: 'Заклейщик. Расходные материалы на исходе', value: 'Заклейщик. Расходные материалы на исходе' },\r\n                { text: 'Укладка. Ошибка сервопривода', value: 'Укладка. Ошибка сервопривода' },\r\n            ],\r\n            // filteredValue: filteredInfo.message || null,\r\n            onFilter: (value, record) => record.message.includes(value),\r\n            sorter: (a, b) => a.message.length - b.message.length,\r\n            sortOrder: sortedInfo.columnKey === 'message' ? sortedInfo.order : null,\r\n            // ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Дата восстановления',\r\n            dataIndex: 'date2Format',\r\n            key: 'date2',\r\n            width: 150,\r\n            align: 'center',\r\n            sorter: (a, b) => a.date2 - b.date2,\r\n            sortOrder: sortedInfo.columnKey === 'date2' ? sortedInfo.order : null\r\n            // ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Время простоя',\r\n            dataIndex: 'timeStopFormat',\r\n            key: 'timeStop',\r\n            width: 150,\r\n            align: 'center',\r\n            sorter: (a, b) => a.timeStop - b.timeStop,\r\n            sortOrder: sortedInfo.columnKey === 'timeStop' ? sortedInfo.order : null,\r\n            // ellipsis: true,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            locale={ruRu.Table}\r\n            columns={columns}\r\n            dataSource={data}\r\n            onChange={handleChange}\r\n            size='medium'\r\n            pagination={false}\r\n            scroll={{ y: 450, x: 600 }}\r\n            tableLayout='auto'\r\n        // rowClassName={(record, index) => record.bit === 2 ? 'colorIcon' : record.bit === 12 ? 'colorIconWarning' : ''}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SortTable;","// material-ui\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Menu,\r\n    Stack,\r\n    TextField,\r\n    Typography,\r\n    useTheme\r\n} from '@mui/material';\r\n// components\r\nimport MainCard from 'components/MainCard';\r\nimport InputBox from 'components/cards/InputBox';\r\nimport ValueBox from 'components/cards/ValueBox';\r\nimport { useState } from 'react';\r\nimport { CalendarOutlined, CheckOutlined, CloseOutlined, InfoOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport TimeAreaChart from 'components/charts/TimeAreaChart';\r\nimport { useQuery } from 'react-query';\r\nimport Service from 'API/Service';\r\nimport archiveAlarmSort from 'utils/archiveAlarmSort';\r\nimport AlarmTable from 'components/tables/AlarmTable';\r\nimport AntSwitch from './AntSwitch';\r\nimport SortTable from 'components/tables/SortTable';\r\n\r\nconst id = \"647ea168652edbe984336ebf\";\r\n\r\nconst TestPage = () => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [lampBool, setLampBool] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const theme = useTheme();\r\n    const [dateFrom, setDateFrom] = useState(null);\r\n    const [dateTo, setDateTo] = useState(null);\r\n    const [queryData, setQueryData] = useState({\r\n        dateStart: Date.now() - 36000 * 1,\r\n        period: 36000 * 1,\r\n        id: '647ebc37652edbe984336edc'\r\n    });\r\n\r\n\r\n\r\n    const { data: TableData } = useQuery(\r\n        ['archiveError1', id], () => Service.getArchiveAlarm(id),\r\n        {\r\n            select: (data) => {\r\n\r\n                return data.errorArchive;\r\n            },\r\n            refetchOnWindowFocus: false,\r\n            enabled: !!id,\r\n            refetchInterval: 2000\r\n        }\r\n    );\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setQueryData({\r\n            ...queryData,\r\n            dateStart: new Date(dateFrom).valueOf(),\r\n            period: new Date(dateTo).valueOf() - new Date(dateFrom).valueOf()\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const [open1, setOpen] = useState(true);\r\n\r\n    return (\r\n\r\n        <Grid container rowSpacing={4.5} columnSpacing={2.75} >\r\n            {/* row 1 */}\r\n            <Grid item xs={12} sx={{\r\n                mb: - 2.25\r\n            }}>\r\n                <Typography variant=\"h5\">С Днем Рождения!</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <ValueBox idProgramPack={\"6438d0288dae6b9062100612\"} />\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <ValueBox idProgramPack={\"6464a0f0f6e5d8a84e77e1c1\"} />\r\n            </Grid> */}\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <InputBox idRead={\"6464a0f0f6e5d8a84e77e1c1\"} idWrite={\"643e7d1c8dae6b906210062f\"} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <ValueBox idProgramPack={\"6438ccd68dae6b90621005ff\"} />\r\n            </Grid>\r\n\r\n            {/* row 2 */}\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <ValueBox idProgramPack={\"6438d00b8dae6b9062100610\"} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <ValueBox idProgramPack={\"6438cfe58dae6b906210060d\"} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <ValueBox idProgramPack={\"6438cff58dae6b906210060e\"} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <ValueBox idProgramPack={\"6438d0008dae6b906210060f\"} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <MainCard content={false}>\r\n                    <Grid container justifyContent={\"right\"}>\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            id=\"long-button\"\r\n                            aria-controls={open ? 'long-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            size='lg'\r\n                        >\r\n                            {open ? <CloseOutlined /> : <MoreOutlined />}\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            MenuListProps={{\r\n                                'aria-labelledby': 'long-button',\r\n                            }}\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    padding: 10\r\n                                    // maxHeight: 48 * 4.5,\r\n                                    // width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <Stack spacing={1}>\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    placeholder=\"Next Appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    sx={{ width: 200 }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                    value={dateFrom}\r\n                                    onChange={(e) => setDateFrom(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    placeholder=\"Next Appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    sx={{ width: 200 }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                    value={dateTo}\r\n                                    onChange={(e) => setDateTo(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Построить\r\n                                </Button>\r\n                            </Stack>\r\n\r\n                        </Menu>\r\n                    </Grid>\r\n                    <Box sx={{ pt: 1, pr: 2 }}>\r\n                        <TimeAreaChart queryData={queryData} name={'Производительность'} />\r\n                    </Box>\r\n                </MainCard >\r\n            </Grid >\r\n\r\n            <Grid item xs={12} md={12} lg={4}>\r\n                <MainCard content={false}>\r\n                    <List\r\n                        component=\"nav\"\r\n                        sx={{\r\n                            px: 0,\r\n                            py: 0,\r\n                        }}\r\n                    >\r\n\r\n                        <ListItem sx={{\r\n                            height: 80\r\n                        }} divider>\r\n                            <ListItemText primary={<Typography variant=\"subtitle1\">Включить сервопривод</Typography>} />\r\n                            <ListItemAvatar>\r\n\r\n                                <AntSwitch onClick={() => { setLampBool(!lampBool) }} />\r\n                            </ListItemAvatar>\r\n                        </ListItem>\r\n                        <ListItem sx={{\r\n                            height: 80\r\n                        }} divider>\r\n                            <ListItemText primary={<Typography variant=\"subtitle1\">Статус сервопривода ось X</Typography>} />\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n\r\n                                    sx={{\r\n                                        bgcolor: lampBool ? theme.palette.success.main : theme.palette.error.main\r\n                                    }}\r\n                                >\r\n                                    {lampBool ? <CheckOutlined /> : <InfoOutlined />}\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                        </ListItem>\r\n                        <ListItem sx={{\r\n                            height: 80\r\n                        }} divider>\r\n                            <ListItemText primary={<Typography variant=\"subtitle1\">Статус сервопривода ось Y</Typography>} />\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n\r\n                                    sx={{\r\n                                        bgcolor: lampBool ? theme.palette.success.main : theme.palette.error.main\r\n                                    }}\r\n                                >\r\n                                    {lampBool ? <CheckOutlined /> : <InfoOutlined />}\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                        </ListItem>\r\n                    </List>\r\n                </MainCard>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <MainCard content={false}>\r\n                    {/* {TableData?.length > 0 && <AlarmTable rows={archiveAlarmSort(TableData)} />} */}\r\n                    <Box>\r\n                        {TableData?.length > 0 && <SortTable rows={archiveAlarmSort(TableData)} />}\r\n                    </Box>\r\n                </MainCard>\r\n            </Grid>\r\n\r\n            {/* <Grid item xs={12} md={12} lg={12}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Аварийные события</Typography>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            id=\"long-button\"\r\n                            aria-controls={open ? 'long-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            size='lg'\r\n                        >\r\n                            {<CalendarOutlined style={{ color: open ? theme.palette.primary.main : theme.palette.grey[700] }} />}\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            MenuListProps={{\r\n                                'aria-labelledby': 'long-button',\r\n                            }}\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    padding: 10\r\n                                    // maxHeight: 48 * 4.5,\r\n                                    // width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <Stack spacing={1}>\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    placeholder=\"Next Appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    sx={{ width: 200 }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                    value={dateFrom}\r\n                                    onChange={(e) => setDateFrom(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    placeholder=\"Next Appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    sx={{ width: 200 }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                    value={dateTo}\r\n                                    onChange={(e) => setDateTo(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Построить\r\n                                </Button>\r\n                            </Stack>\r\n\r\n                        </Menu>\r\n                    </Grid>\r\n                </Grid>\r\n                <MainCard content={false} sx={{ mt: 2 }}>\r\n                    {TableData?.length > 0 && <SortTable rows={archiveAlarmSort(TableData)} />}\r\n                </MainCard>\r\n            </Grid> */}\r\n        </Grid >\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TestPage;\r\n","export function zeroFormatter(hour, minutes, seconds) {\r\n   return ([\r\n      hour.toString().padStart(2, '0'),\r\n      minutes.toString().padStart(2, '0'),\r\n      seconds.toString().padStart(2, '0')\r\n   ].join(':'));\r\n}\r\n\r\nexport function secToTime(timeStamp) {\r\n   let h = Math.floor(timeStamp / 3600);\r\n   let m = Math.floor(timeStamp / 60) - (h * 60);\r\n   let s = Math.floor(timeStamp % 60);\r\n   return [h, m, s];\r\n}\r\n\r\nexport function decOfNum(number, titles) {\r\n   let decCache = [],\r\n      decCases = [2, 0, 1, 1, 1, 2];\r\n   if (!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\r\n   return titles[decCache[number]];\r\n}\r\n\r\nexport function timeFormattedString(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   let valueFormat = '';\r\n   if (h > 0) {\r\n      valueFormat = h + ' ' + decOfNum(h, ['час', 'часа', 'часов']);\r\n   }\r\n   if (m > 0) {\r\n      valueFormat += ' ' + m + ' ' + decOfNum(m, ['минута', 'минуты', 'минут']);\r\n   }\r\n   if (s > 0 && h === 0) {\r\n      valueFormat += ' ' + s + ' ' + decOfNum(s, ['секунда', 'секунды', 'секунд']);\r\n   }\r\n\r\n   return valueFormat;\r\n}\r\n\r\nexport function timeFormattedColon(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   return zeroFormatter(h, m, s);\r\n}"],"names":["ValueCard","_ref","data","_jsx","MainCard","contentSX","p","children","_jsxs","Stack","spacing","name","Typography","variant","color","Skeleton","width","Grid","container","alignItems","value","item","concat","sx","ml","mb","unit","height","defaultProps","typeValue","validateValue","type","_typeValue$type","_typeValue$type2","max","min","InputBox","_mutation$error","title","idRead","idWrite","_useState","useState","_useState2","_slicedToArray","setValue","_useState3","_useState4","isNotFocus","setNotFocus","_useQuery","useQueryClient","useQuery","Service","select","programPack","onSuccess","lastAnswerDec","refetchInterval","isLoading","isError","mutation","error","useMutation","onSubmit","e","preventDefault","mutate","number","programPackId","_Fragment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","Alert","onClose","reset","severity","message","Box","component","noValidate","autoComplete","FormControl","variableType","margin","m","mt","Input","id","endAdornment","InputAdornment","onClick","position","IconButton","edge","EnterOutlined","inputProps","onChange","target","onFocus","onBlur","FormHelperText","nameData","_useQueryProgramPack","useLocation","dispatch","useDispatch","onError","ReadError","status","removeUser","Navigate","useQueryProgramPack","idProgramPack","areaChartOptions","chart","toolbar","show","dataLabels","enabled","stroke","curve","grid","strokeDashArray","queryData","theme","useTheme","secondary","palette","text","line","divider","options","setOptions","series","setSeries","archive","refetchOnWindowFocus","chartData","map","element","date","dec","console","log","useEffect","prevState","_objectSpread","zoom","autoScaleYaxis","events","colors","primary","main","xaxis","tickAmount","tickPlacement","labels","style","rotateAlways","formatter","moment","format","axisBorder","yaxis","borderColor","padding","top","right","bottom","left","tooltip","noData","ReactApexChart","archiveAlarmSort","arr","Object","assign","reverse","arr2","i","length","j","bit","push","date2","styled","require","default","Switch","display","transform","opacity","backgroundColor","mode","boxShadow","borderRadius","transition","transitions","create","duration","boxSizing","rawData","rows","setFilteredInfo","sortedInfo","setSortedInfo","formatDate","useMemo","el","dateFormat","date2Format","timeStop","timeStopFormat","timeFormattedColon","columns","dataIndex","key","align","sorter","a","b","sortOrder","columnKey","order","filters","onFilter","record","includes","Table","locale","ruRu","dataSource","pagination","size","scroll","y","x","tableLayout","anchorEl","setAnchorEl","lampBool","setLampBool","Boolean","_useState5","_useState6","dateFrom","setDateFrom","_useState7","_useState8","dateTo","setDateTo","_useState9","dateStart","Date","now","period","_useState10","setQueryData","TableData","errorArchive","_useState11","_useState12","rowSpacing","columnSpacing","xs","sm","md","lg","ValueBox","content","justifyContent","undefined","event","currentTarget","CloseOutlined","MoreOutlined","Menu","MenuListProps","PaperProps","TextField","placeholder","InputLabelProps","shrink","Button","valueOf","pt","pr","TimeAreaChart","List","px","py","ListItem","ListItemText","ListItemAvatar","AntSwitch","Avatar","bgcolor","success","CheckOutlined","InfoOutlined","SortTable","secToTime","timeStamp","h","Math","floor","decOfNum","titles","decCache","timeFormattedString","_secToTime","_secToTime2","s","valueFormat","minutes","seconds","_secToTime3","_secToTime4","toString","padStart","join"],"sourceRoot":""}