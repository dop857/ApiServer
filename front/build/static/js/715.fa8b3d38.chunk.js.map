{"version":3,"file":"static/js/715.fa8b3d38.chunk.js","mappings":"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","sources":["assets/dataLine.js","components/cards/ValueBox/ValueCard.js","pages/line/CardNode.js","pages/line/index.js","pages/manufacture/CardLine/CardDetails/CardContent/Content.js","utils/priceFormatter.js","utils/timeFormatter.js","utils/validateColor.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/styles/cssUtils.js"],"sourcesContent":["const dataLine = [\r\n    {},\r\n    {\r\n        lineName: 'Линия 1 - стекло',\r\n        lineArray: ['647ead32652edbe984336ec6',\r\n            '647eadcf652edbe984336ec7',\r\n            '647eaeeb652edbe984336ec8',\r\n            '647eaf71652edbe984336ec9',\r\n            '647eb0e4652edbe984336eca',\r\n            '647eb204652edbe984336ecc',\r\n            '647eb472652edbe984336ecd',\r\n            '647eb583652edbe984336ece',\r\n            '647eb5cf652edbe984336ecf',\r\n            '647eb5f0652edbe984336ed0',\r\n            '647eb629652edbe984336ed1',\r\n            '647eb8a6652edbe984336ed2',\r\n            '647eb963652edbe984336ed3',\r\n            '647eb98a652edbe984336ed4',\r\n            '647eb9df652edbe984336ed5',\r\n            '647eba23652edbe984336ed6',\r\n            '647eba6a652edbe984336ed7',\r\n            '647ebaa4652edbe984336ed8',\r\n            '647ebb41652edbe984336ed9',\r\n            '647ebb6f652edbe984336eda',\r\n            '647ebb96652edbe984336edb',\r\n            '647ebc37652edbe984336edc',\r\n            '648c04f7bd303e9d80166735',\r\n            '648c060bbd303e9d80166736',\r\n            '648c0657bd303e9d80166737',\r\n            '648c06abbd303e9d80166738',\r\n            '648c06f4bd303e9d80166739',\r\n            '648c0731bd303e9d8016673a',\r\n            '648fe442bd303e9d8016673b',\r\n            '648fe491bd303e9d8016673c',\r\n            '648fe4ecbd303e9d8016673d'\r\n\r\n\r\n        ],\r\n        lineValue: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '647eadcf652edbe984336ec7',\r\n                name: 'Выпущено продукции',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648c06abbd303e9d80166738',\r\n                name: 'Количество брака',\r\n                value: 12000,\r\n                unit: 'шт',\r\n                additional: [\r\n                    {\r\n                        id: '647eadcf652edbe984336ec7',\r\n                        name: 'Выпущено продукции',\r\n                        value: 12000,\r\n                        unit: 'шт'\r\n                    }],\r\n                percentage() {\r\n                    return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                }\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Выпущено продукции за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Количество брака за смену',\r\n                value: 12000,\r\n                unit: 'шт',\r\n                additional: [\r\n                    {\r\n                        id: '647ebb41652edbe984336ed9',\r\n                        name: 'Выпущено продукции за смену',\r\n                        value: 12000,\r\n                        unit: 'шт'\r\n                    }],\r\n                percentage() {\r\n                    return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                }\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы за смену',\r\n                value: 12000,\r\n                unit: 'time'\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя за смену',\r\n                value: 12000,\r\n                unit: 'time',\r\n                additional: [\r\n                    {\r\n                        id: '648c06f4bd303e9d80166739',\r\n                        name: 'Время работы за смену',\r\n                        value: 12000,\r\n                        unit: 'time'\r\n                    }],\r\n                percentage() {\r\n                    return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                }\r\n            },\r\n\r\n        ],\r\n        nodes: [\r\n            {\r\n                name: 'Этикеровочная машина',\r\n                _id: 1,\r\n                url: '/img/nodeImg/Labeling.png',\r\n                nodeArray: ['647eaf71652edbe984336ec9', '647eb0e4652edbe984336eca', '647eaeeb652edbe984336ec8', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eaf71652edbe984336ec9',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb0e4652edbe984336eca',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eaeeb652edbe984336ec8',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                },\r\n                ]\r\n            },\r\n            {\r\n                name: 'Сериализация',\r\n                _id: 2,\r\n                url: '/img/nodeImg/Serialization.png',\r\n                nodeArray: ['647eb204652edbe984336ecc', '647eb472652edbe984336ecd', '647eb583652edbe984336ece', '648c04f7bd303e9d80166735', '648fe442bd303e9d8016673b', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb204652edbe984336ecc',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb472652edbe984336ecd',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb583652edbe984336ece',\r\n                    name: 'Количество брака',\r\n                    value: 12000,\r\n                    unit: 'шт',\r\n                    additional: [\r\n                        {\r\n                            id: '647eb472652edbe984336ecd',\r\n                            name: 'Выпущено продукции',\r\n                            value: 12000,\r\n                            unit: 'шт'\r\n                        }],\r\n                    percentage() {\r\n                        return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                    }\r\n                },\r\n                {\r\n                    id: '648c04f7bd303e9d80166735',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648fe442bd303e9d8016673b',\r\n                    name: 'Количество брака за смену',\r\n                    value: 12000,\r\n                    unit: 'шт',\r\n                    additional: [\r\n                        {\r\n                            id: '648c04f7bd303e9d80166735',\r\n                            name: 'Выпущено продукции за смену',\r\n                            value: 12000,\r\n                            unit: 'шт'\r\n                        }],\r\n                    percentage() {\r\n                        return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                    }\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Делитель потока бутылок с доводчиком',\r\n                _id: 3,\r\n                url: '/img/nodeImg/Divider.png',\r\n                nodeArray: ['647eb5f0652edbe984336ed0', '647eb629652edbe984336ed1', '647eb5cf652edbe984336ecf', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb5f0652edbe984336ed0',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb629652edbe984336ed1',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb5cf652edbe984336ecf',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Портальный укладчик',\r\n                _id: 4,\r\n                url: '/img/nodeImg/Portal.png',\r\n                nodeArray: ['647eb963652edbe984336ed3', '647eb629652edbe984336ed1', '647eb8a6652edbe984336ed2', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb963652edbe984336ed3',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb629652edbe984336ed1',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb8a6652edbe984336ed2',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Гофроформирователь',\r\n                _id: 5,\r\n                url: '/img/nodeImg/CartomFormer.png',\r\n                nodeArray: ['647eb963652edbe984336ed3', '647eb629652edbe984336ed1', '647eb8a6652edbe984336ed2', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb963652edbe984336ed3',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb629652edbe984336ed1',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb8a6652edbe984336ed2',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time',\r\n                }]\r\n            },\r\n            {\r\n                name: 'Агрегация',\r\n                _id: 6,\r\n                url: '/img/nodeImg/Agregation.png',\r\n                nodeArray: ['647eba23652edbe984336ed6', '647eb98a652edbe984336ed4', '647ebaa4652edbe984336ed8', '647eb9df652edbe984336ed5', '648fe491bd303e9d8016673c', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eba23652edbe984336ed6',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb98a652edbe984336ed4',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ebaa4652edbe984336ed8',\r\n                    name: 'Количество брака',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb9df652edbe984336ed5',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648fe491bd303e9d8016673c',\r\n                    name: 'Количество брака за смену',\r\n                    value: 12000,\r\n                    unit: 'шт',\r\n                    additional: [\r\n                        {\r\n                            id: '647eb9df652edbe984336ed5',\r\n                            name: 'Выпущено продукции за смену',\r\n                            value: 12000,\r\n                            unit: 'шт'\r\n                        }],\r\n                    percentage: function () {\r\n                        return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                    }\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Заклейщик',\r\n                _id: 7,\r\n                url: '/img/nodeImg/Sealer.png',\r\n                nodeArray: ['647ebb6f652edbe984336eda', '647ebb96652edbe984336edb', '647ebb41652edbe984336ed9', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647ebb6f652edbe984336eda',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647ebb96652edbe984336edb',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ebb41652edbe984336ed9',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        lineName: 'Линия 2 - ПЭТ',\r\n        lineArray: [],\r\n        lineValue: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '647eadcf652edbe984336ec7',\r\n                name: 'Выпущено продукции',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Выпущено продукции за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Количество брака за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя за смену',\r\n                value: 12000,\r\n                unit: 'time'\r\n            },\r\n            {\r\n                id: '648c06abbd303e9d80166738',\r\n                name: 'Общее количество брака',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            }\r\n        ],\r\n        nodes: [\r\n            {\r\n                name: 'Этикеровочная машина',\r\n                url: '/img/nodeImg/Labeling.png',\r\n                value: [{\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Сериализация',\r\n                url: '/img/nodeImg/Serialization.png',\r\n                value: [{\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Количество брака',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                }]\r\n            },\r\n\r\n        ],\r\n\r\n    },\r\n    {\r\n        lineName: 'Линия 3 - банки',\r\n        lineArray: [],\r\n        lineValue: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '647eadcf652edbe984336ec7',\r\n                name: 'Выпущено продукции',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Выпущено продукции за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Количество брака за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя за смену',\r\n                value: 12000,\r\n                unit: 'time'\r\n            },\r\n            {\r\n                id: '648c06abbd303e9d80166738',\r\n                name: 'Общее количество брака',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            }\r\n        ],\r\n        nodes: [\r\n            {\r\n                name: 'Этикеровочная машина',\r\n                url: '/img/nodeImg/Labeling.png',\r\n                value: [{}]\r\n            },\r\n            {\r\n                name: 'Сериализация',\r\n                url: '/img/nodeImg/Serialization.png',\r\n                value: [{}]\r\n            }],\r\n    },\r\n];\r\n\r\nexport default dataLine;","// material-ui\r\nimport { Chip, Grid, Skeleton, Stack, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\nimport priceFormatter from 'utils/priceFormatter';\r\nimport { timeFormattedColon } from 'utils/timeFormatter';\r\nimport validateColor from 'utils/validateColor';\r\n\r\nconst format = (data) => {\r\n    let valueFormat, unitFormat = '';\r\n    const { value, unit } = data;\r\n\r\n    if (unit === 'time') {\r\n        if (value > 0) {\r\n            valueFormat = timeFormattedColon(value);\r\n        } else {\r\n            valueFormat = 0;\r\n        }\r\n    } else if (typeof value === 'string' || value instanceof String) {\r\n        valueFormat = value;\r\n    } else {\r\n        unitFormat = unit;\r\n        valueFormat = priceFormatter(value);\r\n    }\r\n\r\n    return { ...data, unit: unitFormat, value: valueFormat }\r\n}\r\n\r\nconst ValueCard = ({ data, low, high }) => (\r\n    <MainCard contentSX={{ p: 2.25 }}>\r\n        <Stack spacing={0.5}>\r\n            {\r\n                data?.name ?\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {data?.name}\r\n                    </Typography>\r\n                    :\r\n                    <Skeleton width=\"80%\" />\r\n            }\r\n            <Grid container alignItems=\"center\">\r\n                {data?.value !== 'undefined' ?\r\n                    <Grid item >\r\n                        <Grid container alignItems={'end'}>\r\n                            <Typography variant=\"h4\" color=\"inherit\">\r\n                                {`${format(data)?.value}`}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" sx={{ ml: 0.5, mb: 0.1 }} color=\"textSecondary\">\r\n                                {`${format(data)?.unit}`}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <Skeleton width=\"40%\" height={30} />\r\n                }\r\n\r\n                {data?.percentage && (\r\n                    <Grid item>\r\n                        <Chip\r\n                            variant=\"combined\"\r\n                            label={`${data?.percentage()}%`}\r\n                            sx={{ ml: 1.25, pl: 1, pr: 1 }}\r\n                            size=\"small\"\r\n                            color={validateColor(low, high, data?.percentage())}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Stack>\r\n    </MainCard>\r\n);\r\n\r\nValueCard.defaultProps = {\r\n    color: 'primary'\r\n};\r\n\r\nexport default ValueCard;\r\n","import { Box, CardMedia, Grid, List, Typography, useTheme } from \"@mui/material\";\r\nimport MainCard from \"components/MainCard\";\r\nimport Content from \"pages/manufacture/CardLine/CardDetails/CardContent/Content\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CardNode = ({ props, id }) => {\r\n    const { name, url, value, nodeArray, _id } = props;\r\n    const theme = useTheme();\r\n    return (\r\n        <MainCard contentSX={{ p: 3, '&:last-child': { p: 3 } }} >\r\n            <Grid container spacing={3}>\r\n                <Grid container item xs={12} sm={4} md={4} lg={3} justifyContent={'center'}>\r\n                    <Link\r\n                        to={`/node`}\r\n                        state={{ name, nodeArray, _id, idLine: id }}\r\n                        key={url}\r\n                    >\r\n                        <Grid container item sx={{\r\n                            width: '100%', backgroundColor: theme.palette.grey[50], borderRadius: '20px', p: 2, maxWidth: 350,\r\n                            cursor: \"pointer\",\r\n                            '&:hover': {\r\n                                boxShadow: '4px 4px 8px -4px rgba(34, 60, 80, 0.15)',\r\n                                p: 1.9\r\n                            }\r\n                        }} justifyContent={'center'}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                // sx={{\r\n                                //     maxWidth: 350\r\n                                // }}\r\n                                image={url}\r\n                                alt={name}\r\n                            />\r\n                        </Grid>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={8} lg={9}>\r\n                    <Box sx={{ pt: 2, pb: 2, borderBottom: '1px solid #f0f0f0' }}>\r\n                        <Typography variant=\"h5\">{name}</Typography>\r\n                    </Box>\r\n                    <List sx={{ width: '100%', p: 0 }}>\r\n                        {value.map((el) => <Content key={el.id} props={el} />)}\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\nexport default CardNode;","import { Grid, Typography } from \"@mui/material\";\r\nimport CardNode from \"./CardNode\";\r\nimport ValueCard from \"components/cards/ValueBox/ValueCard\";\r\nimport dataLine from \"assets/dataLine\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Service from \"API/Service\";\r\nimport { useQuery } from \"react-query\";\r\n\r\n\r\nlet initialData = dataLine;\r\n\r\nconst Line = () => {\r\n    const { id } = useParams();\r\n    useQuery(\r\n        ['arrProgram', { programPack: initialData[id].lineArray }], () => Service.getProgramPackArray({ programPack: initialData[id].lineArray }), {\r\n        select: (data) => data.p,\r\n        onSuccess: (data) => data?.forEach((element) => {\r\n            initialData[id].lineValue?.forEach((el) => {\r\n                if (element._id === el.id) {\r\n                    el.value = Number(element.lastAnswerDec);\r\n                }\r\n                el.additional && el.additional?.forEach((additionalEl) => {\r\n                    if (element._id === additionalEl.id) {\r\n                        additionalEl.value = Number(element.lastAnswerDec);\r\n                    }\r\n                })\r\n            });\r\n            initialData[id].nodes?.forEach((node) => {\r\n                node.value?.forEach((node) => {\r\n                    if (element._id === node.id) {\r\n                        node.value = Number(element.lastAnswerDec);\r\n                    }\r\n                });\r\n            });\r\n        }),\r\n        refetchInterval: 1000,\r\n        enabled: initialData[id].lineArray.length !== 0,\r\n        refetchOnWindowFocus: false\r\n    });\r\n\r\n\r\n    return (\r\n        <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n                <Typography variant=\"h4\">{initialData[id].lineName}</Typography>\r\n            </Grid>\r\n            <Grid container item spacing={3}>\r\n                {initialData[id].lineValue.map((el) =>\r\n                    <Grid key={el.id} item xs={12} sm={6} md={4} lg={3}>\r\n                        <ValueCard data={el} low={1} high={3} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n                <Typography variant=\"h4\">Узлы</Typography>\r\n            </Grid>\r\n            <Grid container item spacing={3} >\r\n                {initialData[id].nodes.map((node) =>\r\n                    <Grid key={node.name} item xs={12}>\r\n                        <CardNode props={node} id={id} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Line;","import { Box, LinearProgress, ListItem, ListItemText, Typography, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { timeFormattedColon, timeFormattedString } from \"utils/timeFormatter\";\r\nimport priceFormatter from \"utils/priceFormatter\";\r\nimport validateColor from \"utils/validateColor\";\r\n\r\n\r\nconst Content = ({ props }) => {\r\n    const { name, value, progress, unit, color } = props;\r\n    const theme = useTheme();\r\n    const matchDownMS = useMediaQuery(theme.breakpoints.only('xs'));\r\n    let valueFormat, unitFormat = '';\r\n    if (unit === 'time') {\r\n        if (value > 0) {\r\n            valueFormat = matchDownMS ? timeFormattedColon(value) : timeFormattedString(value);\r\n        } else {\r\n            valueFormat = 0;\r\n        }\r\n    } else if (typeof value === 'string' || value instanceof String) {\r\n        valueFormat = value;\r\n    } else {\r\n        unitFormat = unit;\r\n        valueFormat = isNaN(value) ? 0 : priceFormatter(value);\r\n    }\r\n\r\n    return (\r\n        <ListItem sx={{ p: 0, pt: 1.25, pb: 1.25, borderBottom: '1px solid #f0f0f0', flexWrap: matchDownMS ? 'wrap' : 'nowrap' }} >\r\n            <ListItemText sx={{ mr: 1 }} primary={<Typography variant=\"body1\">{name} </Typography>} />\r\n\r\n            {!progress && <Typography sx={{ textAlign: 'right' }} variant=\"h5\">{`${valueFormat} ${unitFormat}`} </Typography>}\r\n\r\n            {progress &&\r\n                <Box sx={{ minWidth: matchDownMS ? '100%' : '40%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                    <Box sx={{ width: '100%', mr: 1 }}>\r\n                        <LinearProgress color={color} variant=\"determinate\" value={isNaN(value) ? 0 : Math.round(value)} />\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 35 }}>\r\n                        <Typography sx={{ textAlign: 'right' }} variant=\"h5\">{`${isNaN(value) ? 0 : Math.round(value)}% `}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n        </ListItem>\r\n    );\r\n}\r\n\r\n\r\nexport default Content;","const priceFormatter = new Intl.NumberFormat().format\r\nexport default priceFormatter;","export function zeroFormatter(hour, minutes, seconds) {\r\n   return ([\r\n      hour.toString().padStart(2, '0'),\r\n      minutes.toString().padStart(2, '0'),\r\n      seconds.toString().padStart(2, '0')\r\n   ].join(':'));\r\n}\r\n\r\nexport function secToTime(timeStamp) {\r\n   let h = Math.floor(timeStamp / 3600);\r\n   let m = Math.floor(timeStamp / 60) - (h * 60);\r\n   let s = Math.floor(timeStamp % 60);\r\n   return [h, m, s];\r\n}\r\n\r\nexport function decOfNum(number, titles) {\r\n   let decCache = [],\r\n      decCases = [2, 0, 1, 1, 1, 2];\r\n   if (!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\r\n   return titles[decCache[number]];\r\n}\r\n\r\nexport function timeFormattedString(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   let valueFormat = '';\r\n   if (h > 0) {\r\n      valueFormat = h + ' ' + decOfNum(h, ['час', 'часа', 'часов']);\r\n   }\r\n   if (m > 0) {\r\n      valueFormat += ' ' + m + ' ' + decOfNum(m, ['минута', 'минуты', 'минут']);\r\n   }\r\n   if (s > 0 && h === 0) {\r\n      valueFormat += ' ' + s + ' ' + decOfNum(s, ['секунда', 'секунды', 'секунд']);\r\n   }\r\n\r\n   return valueFormat;\r\n}\r\n\r\nexport function timeFormattedColon(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   return zeroFormatter(h, m, s);\r\n}","export default function validateColor(low, high, value) {\r\n    if (low >= value) {\r\n        return 'success'\r\n    } else if (value <= high) {\r\n        return 'warning'\r\n    } else if (value > high) {\r\n        return 'error'\r\n    }\r\n    return 'primary'\r\n}\r\n\r\nexport function validateColorReverse(low, high, value) {\r\n    if (value < high) {\r\n        return 'error'\r\n    } else if (low <= value) {\r\n        return 'success'\r\n    } else if (value >= high) {\r\n        return 'warning'\r\n    }\r\n    return 'primary'\r\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}"],"names":["lineName","lineArray","lineValue","id","name","value","unit","additional","percentage","this","toFixed","nodes","_id","url","nodeArray","format","data","valueFormat","unitFormat","timeFormattedColon","String","priceFormatter","_objectSpread","ValueCard","_ref","_format","_format2","low","high","_jsx","MainCard","contentSX","p","children","_jsxs","Stack","spacing","Typography","variant","color","Skeleton","width","Grid","container","alignItems","item","concat","sx","ml","mb","height","Chip","label","pl","pr","size","validateColor","defaultProps","props","theme","useTheme","xs","sm","md","lg","justifyContent","Link","to","state","idLine","backgroundColor","palette","grey","borderRadius","maxWidth","cursor","boxShadow","CardMedia","component","image","alt","Box","pt","pb","borderBottom","List","map","el","Content","initialData","dataLine","useParams","useQuery","programPack","Service","select","onSuccess","forEach","element","_initialData$id$lineV","_initialData$id$nodes","_el$additional","Number","lastAnswerDec","additionalEl","node","_node$value","refetchInterval","enabled","length","refetchOnWindowFocus","rowSpacing","columnSpacing","CardNode","progress","matchDownMS","useMediaQuery","breakpoints","only","timeFormattedString","isNaN","ListItem","flexWrap","ListItemText","mr","primary","textAlign","minWidth","display","LinearProgress","Math","round","Intl","NumberFormat","secToTime","timeStamp","h","floor","decOfNum","number","titles","decCache","min","_secToTime","_secToTime2","_slicedToArray","m","s","minutes","seconds","_secToTime3","_secToTime4","toString","padStart","join","validateColorReverse","_excluded","CardMediaRoot","styled","slot","overridesResolver","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useThemeProps","className","_props$component","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","getCardMediaUtilityClass","useUtilityClasses","clsx","as","role","undefined","generateUtilityClass","cardMediaClasses","generateUtilityClasses","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","waveKeyframe","_templateObject2","SkeletonRoot","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","getUnit","shape","radiusValue","toUnitless","vars","bg","alpha","text","mode","marginTop","marginBottom","transformOrigin","transform","content","visibility","_ref2","css","_templateObject3","_ref3","_templateObject4","action","hover","_props$animation","_props$variant","Boolean","getSkeletonUtilityClass","skeletonClasses","isUnitless","parseFloat","input","match","convertLength","baseFontSize","toUnit","fromUnit","pxLength","outputLength","alignProperty","grid","sizeBelow","sizeAbove","fontGrid","lineHeight","pixels","htmlFontSize","responsiveProperty","cssProperty","max","_ref3$unit","_ref3$breakpoints","_ref3$transform","output","_defineProperty","factor","breakpoint"],"sourceRoot":""}