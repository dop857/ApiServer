{"version":3,"file":"static/js/251.878e48c9.chunk.js","mappings":"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","sources":["pages/manufacture/CardLine/CardDetails/CardContent/Content.js","pages/manufacture/CardLine/CardSummary.js","pages/manufacture/CardLine/CardDetails/HeaderContent.js","pages/manufacture/CardLine/CardDetails/CardProgress/ProgressCircle.js","pages/manufacture/CardLine/CardDetails/CardProgress/index.js","pages/manufacture/CardLine/CardDetails/CardContent/index.js","pages/manufacture/CardLine/index.js","assets/dataManufature.js","pages/manufacture/index.js","utils/priceFormatter.js","utils/timeFormatter.js"],"sourcesContent":["import { Box, LinearProgress, ListItem, ListItemText, Typography, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { timeFormattedColon, timeFormattedString } from \"utils/timeFormatter\";\r\nimport priceFormatter from \"utils/priceFormatter\";\r\n\r\n\r\nconst Content = ({ props }) => {\r\n    const { name, value, progress, unit } = props;\r\n    const theme = useTheme();\r\n    const matchDownMS = useMediaQuery(theme.breakpoints.only('xs'));\r\n    let valueFormat, unitFormat = '';\r\n\r\n    if (unit === 'time') {\r\n        if (value > 0) {\r\n            valueFormat = matchDownMS ? timeFormattedColon(value) : timeFormattedString(value);\r\n        } else {\r\n            valueFormat = 0;\r\n        }\r\n    } else if (typeof value === 'string' || value instanceof String) {\r\n        valueFormat = value;\r\n    } else {\r\n        unitFormat = unit;\r\n        valueFormat = isNaN(value) ? 0 : priceFormatter(value);\r\n    }\r\n\r\n    return (\r\n        <ListItem item sx={{ p: 0, pt: 1.25, pb: 1.25, borderBottom: '1px solid #f0f0f0', flexWrap: matchDownMS ? 'wrap' : 'nowrap' }} >\r\n            <ListItemText sx={{ mr: 1 }} primary={<Typography variant=\"body1\">{name} </Typography>} />\r\n\r\n            {!progress && <Typography sx={{ textAlign: 'right' }} variant=\"h5\">{`${valueFormat} ${unitFormat}`} </Typography>}\r\n\r\n            {progress &&\r\n                <Box sx={{ minWidth: matchDownMS ? '100%' : '40%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                    <Box sx={{ width: '100%', mr: 1 }}>\r\n                        <LinearProgress color=\"primary\" variant=\"determinate\" value={isNaN(value) ? 0 : Math.round(value)} />\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 35 }}>\r\n                        <Typography sx={{ textAlign: 'right' }} variant=\"h5\">{`${isNaN(value) ? 0 : Math.round(value)}% `}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n        </ListItem>\r\n    );\r\n}\r\n\r\n\r\nexport default Content;","import { CaretDownOutlined } from \"@ant-design/icons\";\r\nimport { Box, Chip, Grid, Typography, useTheme } from \"@mui/material\";\r\nlet label;\r\nlet color;\r\n\r\nconst CardSummary = ({ props }) => {\r\n    const { name, product, status, active } = props;\r\n    const theme = useTheme();\r\n    if (status === 1) {\r\n        label = 'Запущена'\r\n        color = 'success'\r\n    } else if (status === 2) {\r\n        label = 'Авария'\r\n        color = 'error'\r\n    } else {\r\n        label = 'Остановлена'\r\n        color = 'secondary'\r\n    }\r\n\r\n    return (\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid container item justifyContent=\"space-between\" >\r\n                <Typography variant=\"h5\">{name}</Typography>\r\n                <Chip label={label} color={color} />\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography sx={{ mt: 1 }} variant=\"h5\" color=\"textSecondary\">{'Продукт: ' + product}</Typography>\r\n            </Grid>\r\n            <Box sx={{\r\n                position: 'absolute', left: '50%', top: '80%', right: 0, bottom: 0, color: theme.palette.secondary.main, transition: 'all 1s ease'\r\n            }}>\r\n                {/* {active ? <CaretUpOutlined style={{ '& path': 'all 1s ease' }} /> : <CaretDownOutlined style={{ transition: 'all 1s ease' }} />} */}\r\n                <CaretDownOutlined rotate={active ? 180 : 0} />\r\n            </Box>\r\n        </Grid >\r\n    );\r\n}\r\n\r\n\r\nexport default CardSummary;","import { Grid, Typography } from \"@mui/material\";\r\nimport priceFormatter from \"utils/priceFormatter\";\r\n\r\nconst HeaderContent = ({ props }) => {\r\n    const { name, value, unit } = props;\r\n    return (\r\n        <Grid item>\r\n            <Grid container direction={'column'} justifyContent={'center'} alignItems={'center'}>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" color={'secondary'}>{name}</Typography>\r\n                </Grid>\r\n                <Grid container item direction={'column'} sx={{ mt: 1.75 }} justifyContent={'center'} alignItems={'center'}>\r\n                    <Typography variant=\"h3\" >{priceFormatter(value) || 0}</Typography>\r\n                    <Typography sx={{ textAlign: 'center', mt: -0.5 }} variant=\"h6\" color={'secondary'}>{unit}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default HeaderContent;","import { Grid, Typography } from \"@mui/material\";\r\nimport { Progress } from \"antd\";\r\n\r\n\r\nconst Info = ({ percent, successPercent, theme }) => {\r\n    return (\r\n        <Grid container direction={'column'} sx={{ mt: 3, height: '100%', fontSize: 20 }} justifyContent={'center'} alignItems={'center'}>\r\n            <Grid item sx={{ fontSize: 20 }}>\r\n                <Typography align={'center'} sx={{\r\n                    fontWeight: 500,\r\n                    fontSize: '2.25rem',\r\n                    lineHeight: 1.21\r\n                }} color={theme.palette.primary.main}>{successPercent + \"%\"}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography align={'center'} variant=\"h5\" color={theme.palette.error[300]}>{percent + \"%\"}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst ProgressCircle = ({ props }) => {\r\n    const { width, percentExpected, percentSuccess, theme } = props;\r\n    return (\r\n        <Progress\r\n            format={(percent, successPercent) => <Info percent={percent} successPercent={successPercent} theme={theme} />}\r\n            strokeColor={theme.palette.error[300]}\r\n            percent={Math.floor(percentExpected)}\r\n            success={{ percent: Math.floor(percentSuccess), strokeColor: theme.palette.primary.main }}\r\n            type=\"circle\"\r\n            showInfo={true}\r\n            size={width}\r\n            trailColor={theme.palette.secondary[100]}\r\n            strokeWidth={7.5}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default ProgressCircle;","import { Box, Grid, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport MainCard from \"components/MainCard\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\nimport HeaderContent from \"../HeaderContent\";\r\nimport ProgressCircle from \"./ProgressCircle\";\r\n\r\nconst CardProgress = (props) => {\r\n    const { task, percentExpected, percentSuccess } = props;\r\n    const theme = useTheme();\r\n    const { width, ref } = useResizeDetector();\r\n    return (\r\n        <MainCard contentSX={{ p: 0, '&:last-child': { p: 0 } }} sx={{ height: '100%' }}>\r\n            <Stack>\r\n\r\n                <Grid container direction={'column'} justifyContent={'center'} alignItems={'center'} sx={{ p: 2.5, borderBottom: '1px solid #f0f0f0' }}>\r\n                    <HeaderContent props={task} />\r\n                </Grid>\r\n                <Grid container justifyContent={'center'} ref={ref}>\r\n                    <Grid item sx={{ pt: 3.75, pb: 3.75 }}>\r\n                        <ProgressCircle props={{ width: width * 0.67 > 250 ? 250 : width * 0.67, percentExpected, percentSuccess, theme }} />\r\n                    </Grid>\r\n                    <Grid direction={'column'} container item sx={{ p: 2.5, pt: 0 }}>\r\n                        <Grid container item justifyContent={\"center\"} alignItems={'center'}>\r\n                            <Box sx={{ width: 15, height: 15, backgroundColor: theme.palette.primary.main, borderRadius: \"4px\", mr: 1.25 }} color={\"secondary\"} />\r\n                            <Typography variant=\"h6\" color={'secondary'}>Факт</Typography>\r\n                        </Grid>\r\n                        <Grid container item sx={{ mt: 2 }} justifyContent={\"center\"} alignItems={'center'}>\r\n                            <Box sx={{ width: 15, height: 15, backgroundColor: theme.palette.error[300], borderRadius: \"4px\", mr: 1.25 }} color={\"secondary\"} />\r\n                            <Typography variant=\"h6\" color={'secondary'}>План</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Stack>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\n\r\nexport default CardProgress;","import { Button, Grid, List } from \"@mui/material\";\r\nimport MainCard from \"components/MainCard\";\r\nimport HeaderContent from \"../HeaderContent\";\r\nimport Content from \"./Content\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CardContent = ({ props }) => {\r\n    const { id, productName, value } = props;\r\n    const headerContent = value.slice(0, 3);\r\n    const bodyContent = value.slice(3);\r\n\r\n    return (\r\n        <MainCard contentSX={{ p: 0, '&:last-child': { p: 0 } }} sx={{ height: \"100%\" }}>\r\n            <Grid container sx={{ p: 2.5, borderBottom: '1px solid #f0f0f0' }} justifyContent={'space-around'} rowSpacing={3} columnSpacing={2}>\r\n                {headerContent.length > 0 ?\r\n                    headerContent.map((value) => <HeaderContent key={value} props={value} />)\r\n                    :\r\n                    <HeaderContent props={{ value: 'Данных нет' }} />\r\n                }\r\n            </Grid>\r\n            <Grid container sx={{ p: 2.5 }}>\r\n                <List sx={{ width: '100%', p: 0 }}>\r\n                    <Content props={{ name: 'Вид продукта', value: productName.product }} />\r\n                    {bodyContent.length > 0 ?\r\n                        <>\r\n                            <Content key={bodyContent[0].value} props={bodyContent[0]} />\r\n                            <Content key={bodyContent[1].value} props={bodyContent[1]} />\r\n                            <Content key={bodyContent[2].value} props={bodyContent[2]} />\r\n                            <Content key={bodyContent[3].value} props={{ ...bodyContent[3], value: (headerContent[2].value * (1 / (bodyContent[0].value / 3600))) / bodyContent[1].value * 100 }} />\r\n                            <Content key={bodyContent[4].value} props={{ ...bodyContent[4], value: Number(headerContent[1].value) / (Number(headerContent[1].value) + Number(headerContent[2].value)) * 100 }} />\r\n                        </>\r\n                        :\r\n                        <Content props={{ value: 'Данных нет' }} />\r\n                    }\r\n                </List>\r\n                <Grid container justifyContent={'end'} mt={2}>\r\n                    <Link\r\n                        to={`/line/${id}`}\r\n                        key={id}\r\n                    >\r\n                        <Button>Подробнее</Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard >\r\n    );\r\n}\r\n\r\n\r\nexport default CardContent;","import { Accordion, AccordionDetails, AccordionSummary, Grid, useTheme } from \"@mui/material\";\r\nimport CardSummary from \"./CardSummary\";\r\nimport CardProgress from \"./CardDetails/CardProgress\";\r\nimport Service from \"API/Service\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useMemo, useState } from \"react\";\r\nimport CardContent from \"./CardDetails/CardContent\";\r\n\r\n\r\nconst CardLine = ({ props }) => {\r\n    const { id, task, dataSummary, arrProgramPack, initialContent } = props;\r\n    const theme = useTheme();\r\n    const [content, setContent] = useState(initialContent);\r\n    const [active, setActive] = useState(false);\r\n\r\n\r\n    const { isLoading, isError, data, error } = useQuery(\r\n        ['arrProgram', arrProgramPack], () => Service.getProgramPackArray(arrProgramPack), {\r\n        select: (data) => data.p,\r\n        // onSuccess: (data) => {\r\n        //     let cloneContent = content;\r\n        //     data?.forEach((element) => {\r\n        //         content?.forEach((el) => {\r\n        //             if (element._id === el.id) {\r\n        //                 el.value = element.lastAnswerDec;\r\n        //             }\r\n        //         });\r\n        //         setContent(cloneContent);\r\n        //     })\r\n        // },\r\n\r\n        refetchInterval: 1000,\r\n        enabled: !!arrProgramPack,\r\n        refetchOnWindowFocus: false\r\n    });\r\n\r\n\r\n    useMemo(() => {\r\n        let cloneContent = content;\r\n        data?.forEach((element) => {\r\n            cloneContent?.forEach((el) => {\r\n                if (element._id === el.id) {\r\n                    el.value = element.lastAnswerDec;\r\n                }\r\n            });\r\n            setContent(cloneContent);\r\n        })\r\n    }, [data]);\r\n\r\n    return (\r\n        <Accordion sx={{ background: 'transparent', boxShadow: 'none' }} onChange={() => setActive(!active)}>\r\n            <AccordionSummary\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                sx={{\r\n                    border: `1px solid ${theme.palette.grey.A800}`, borderRadius: '8px', p: 3, backgroundColor: \"#FFFFFF\",\r\n                    '.MuiAccordionSummary-content': {\r\n                        m: 0,\r\n                        \"&.Mui-expanded\": {\r\n                            m: 0\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <CardSummary props={{ ...dataSummary, active: active, status: Number(content[9].value) }} />\r\n            </AccordionSummary>\r\n            <AccordionDetails sx={{ background: \"transparent\", p: 0, mt: 2.75 }}>\r\n                <Grid container item spacing={2.75} alignItems={'stretch'}>\r\n                    <Grid item xs={12} sm={4} md={4} lg={3}>\r\n                        <CardProgress task={task} percentExpected={(Number(content[4].value) + Number(content[5].value)) * 1.7 / task.value * 100} percentSuccess={content[2].value / task.value * 100} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={8} md={8} lg={9}>\r\n                        <CardContent props={{ id: id, value: content, productName: dataSummary }} />\r\n                    </Grid>\r\n                </Grid>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default CardLine;","export const arrRequest = { programPack: ['647ead32652edbe984336ec6', '648c06abbd303e9d80166738', '647ebb41652edbe984336ed9', '648c06f4bd303e9d80166739', '648c0731bd303e9d8016673a', '648fe4ecbd303e9d8016673d', '648c0657bd303e9d80166737'] };\r\n\r\nexport const dataSummary = [\r\n    {\r\n        id: 1,\r\n        dataSummary: {\r\n            name: 'Линия 1 - стекло',\r\n            product: 'Беленькая 0,25',\r\n            status: 1\r\n        },\r\n        arrProgramPack: arrRequest,\r\n        task: {\r\n            name: 'Задание',\r\n            value: 18000,\r\n            unit: 'шт'\r\n        },\r\n        initialContent: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Брак',\r\n                value: 100000,\r\n                unit: 'шт',\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Произведено',\r\n                value: 1000000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                name: 'Плановая производительность',\r\n                value: 6200,\r\n                unit: 'шт/ч',\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы с начала задания',\r\n                value: 1000000,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя оборудования',\r\n                value: 78,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                name: 'Эффективность',\r\n                value: 95,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Брак',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Разность выполнения факт от плана',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                id: '648c0657bd303e9d80166737',\r\n                name: 'Статус линии',\r\n                value: 0,\r\n                unit: '',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        dataSummary: {\r\n            name: 'Линия 2 - ПЭТ',\r\n            product: 'Черноголовка 0,5',\r\n            status: 0\r\n        },\r\n        task: {\r\n            name: 'Задание',\r\n            value: 15000,\r\n            unit: 'шт'\r\n        },\r\n        initialContent: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Брак',\r\n                value: 100000,\r\n                unit: 'шт',\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Произведено',\r\n                value: 1000000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                name: 'Плановая производительность',\r\n                value: 6200,\r\n                unit: 'шт/ч',\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы с начала задания',\r\n                value: 1000000,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя оборудования',\r\n                value: 78,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                name: 'Эффективность',\r\n                value: 95,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Брак',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Разность выполнения факт от плана',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                id: '648c0657bd303e9d80166737',\r\n                name: 'Статус линии',\r\n                value: 0,\r\n                unit: '',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        dataSummary: {\r\n            name: 'Линия 3 - банки',\r\n            product: 'Квас 1,5',\r\n            status: 0\r\n        },\r\n        task: {\r\n            name: 'Задание',\r\n            value: 15000,\r\n            unit: 'шт'\r\n        },\r\n        initialContent: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Брак',\r\n                value: 100000,\r\n                unit: 'шт',\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Произведено',\r\n                value: 1000000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                name: 'Плановая производительность',\r\n                value: 6200,\r\n                unit: 'шт/ч',\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы с начала задания',\r\n                value: 1000000,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя оборудования',\r\n                value: 78,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                name: 'Эффективность',\r\n                value: 95,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Брак',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Разность выполнения факт от плана',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                id: '648c0657bd303e9d80166737',\r\n                name: 'Статус линии',\r\n                value: 0,\r\n                unit: '',\r\n            }\r\n        ]\r\n    }\r\n]\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport CardLine from \"./CardLine\";\r\nimport { dataSummary } from \"assets/dataManufature\";\r\n\r\n\r\nconst Manufacture = () => {\r\n\r\n    return (\r\n        <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n                <Typography variant=\"h4\">Производство</Typography>\r\n            </Grid>\r\n            <Grid container item spacing={3}>\r\n                {\r\n                    dataSummary.map((el) =>\r\n                        <Grid item xs={12}>\r\n                            <CardLine key={el.id} props={el} />\r\n                        </Grid>\r\n                    )\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\nexport default Manufacture;","const priceFormatter = new Intl.NumberFormat().format\r\nexport default priceFormatter;","export function zeroFormatter(hour, minutes, seconds) {\r\n   return ([\r\n      hour.toString().padStart(2, '0'),\r\n      minutes.toString().padStart(2, '0'),\r\n      seconds.toString().padStart(2, '0')\r\n   ].join(':'));\r\n}\r\n\r\nexport function secToTime(timeStamp) {\r\n   let h = Math.floor(timeStamp / 3600);\r\n   let m = Math.floor(timeStamp / 60) - (h * 60);\r\n   let s = Math.floor(timeStamp % 60);\r\n   return [h, m, s];\r\n}\r\n\r\nexport function decOfNum(number, titles) {\r\n   let decCache = [],\r\n      decCases = [2, 0, 1, 1, 1, 2];\r\n   if (!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\r\n   return titles[decCache[number]];\r\n}\r\n\r\nexport function timeFormattedString(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   let valueFormat = '';\r\n   if (h > 0) {\r\n      valueFormat = h + ' ' + decOfNum(h, ['час', 'часа', 'часов']);\r\n   }\r\n   if (m > 0) {\r\n      valueFormat += ' ' + m + ' ' + decOfNum(m, ['минута', 'минуты', 'минут']);\r\n   }\r\n   if (s > 0 && h === 0) {\r\n      valueFormat += ' ' + s + ' ' + decOfNum(s, ['секунда', 'секунды', 'секунд']);\r\n   }\r\n\r\n   return valueFormat;\r\n}\r\n\r\nexport function timeFormattedColon(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   return zeroFormatter(h, m, s);\r\n}"],"names":["_ref","valueFormat","props","name","value","progress","unit","theme","useTheme","matchDownMS","useMediaQuery","breakpoints","only","unitFormat","timeFormattedColon","timeFormattedString","String","isNaN","priceFormatter","_jsxs","ListItem","item","sx","p","pt","pb","borderBottom","flexWrap","children","_jsx","ListItemText","mr","primary","Typography","variant","textAlign","concat","Box","minWidth","display","alignItems","justifyContent","width","LinearProgress","color","Math","round","label","product","status","active","Grid","container","Chip","mt","position","left","top","right","bottom","palette","secondary","main","transition","CaretDownOutlined","rotate","direction","Info","percent","successPercent","height","fontSize","align","fontWeight","lineHeight","error","_ref2","percentExpected","percentSuccess","Progress","format","strokeColor","floor","success","type","showInfo","size","trailColor","strokeWidth","task","_useResizeDetector","useResizeDetector","ref","MainCard","contentSX","Stack","HeaderContent","ProgressCircle","backgroundColor","borderRadius","id","productName","headerContent","slice","bodyContent","rowSpacing","columnSpacing","length","map","List","Content","_Fragment","_objectSpread","Number","Link","to","Button","dataSummary","arrProgramPack","initialContent","_useState","useState","_useState2","_slicedToArray","content","setContent","_useState3","_useState4","setActive","_useQuery","useQuery","Service","select","data","refetchInterval","enabled","refetchOnWindowFocus","isLoading","isError","useMemo","cloneContent","forEach","element","el","_id","lastAnswerDec","Accordion","background","boxShadow","onChange","AccordionSummary","border","grey","A800","m","CardSummary","AccordionDetails","spacing","xs","sm","md","lg","CardProgress","CardContent","programPack","mb","CardLine","Intl","NumberFormat","secToTime","timeStamp","h","decOfNum","number","titles","decCache","min","_secToTime","_secToTime2","s","minutes","seconds","_secToTime3","_secToTime4","toString","padStart","join"],"sourceRoot":""}