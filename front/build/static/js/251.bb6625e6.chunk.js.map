{"version":3,"file":"static/js/251.bb6625e6.chunk.js","mappings":"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","sources":["pages/manufacture/CardLine/CardDetails/CardContent/Content.js","pages/manufacture/CardLine/CardSummary.js","pages/manufacture/CardLine/CardDetails/HeaderContent.js","pages/manufacture/CardLine/CardDetails/CardProgress/ProgressCircle.js","pages/manufacture/CardLine/CardDetails/CardProgress/index.js","pages/manufacture/CardLine/CardDetails/CardContent/index.js","pages/manufacture/CardLine/index.js","assets/dataManufature.js","pages/manufacture/index.js","utils/priceFormatter.js","utils/timeFormatter.js","utils/validateColor.js"],"sourcesContent":["import { Box, LinearProgress, ListItem, ListItemText, Typography, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { timeFormattedColon, timeFormattedString } from \"utils/timeFormatter\";\r\nimport priceFormatter from \"utils/priceFormatter\";\r\nimport validateColor from \"utils/validateColor\";\r\n\r\n\r\nconst Content = ({ props }) => {\r\n    const { name, value, progress, unit, color } = props;\r\n    const theme = useTheme();\r\n    const matchDownMS = useMediaQuery(theme.breakpoints.only('xs'));\r\n    let valueFormat, unitFormat = '';\r\n    if (unit === 'time') {\r\n        if (value > 0) {\r\n            valueFormat = matchDownMS ? timeFormattedColon(value) : timeFormattedString(value);\r\n        } else {\r\n            valueFormat = 0;\r\n        }\r\n    } else if (typeof value === 'string' || value instanceof String) {\r\n        valueFormat = value;\r\n    } else {\r\n        unitFormat = unit;\r\n        valueFormat = isNaN(value) ? 0 : priceFormatter(value);\r\n    }\r\n\r\n    return (\r\n        <ListItem sx={{ p: 0, pt: 1.25, pb: 1.25, borderBottom: '1px solid #f0f0f0', flexWrap: matchDownMS ? 'wrap' : 'nowrap' }} >\r\n            <ListItemText sx={{ mr: 1 }} primary={<Typography variant=\"body1\">{name} </Typography>} />\r\n\r\n            {!progress && <Typography sx={{ textAlign: 'right' }} variant=\"h5\">{`${valueFormat} ${unitFormat}`} </Typography>}\r\n\r\n            {progress &&\r\n                <Box sx={{ minWidth: matchDownMS ? '100%' : '40%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                    <Box sx={{ width: '100%', mr: 1 }}>\r\n                        <LinearProgress color={color} variant=\"determinate\" value={isNaN(value) ? 0 : Math.round(value)} />\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 35 }}>\r\n                        <Typography sx={{ textAlign: 'right' }} variant=\"h5\">{`${isNaN(value) ? 0 : Math.round(value)}% `}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n        </ListItem>\r\n    );\r\n}\r\n\r\n\r\nexport default Content;","import { CaretDownOutlined } from \"@ant-design/icons\";\r\nimport { Box, Chip, Grid, Typography, useTheme } from \"@mui/material\";\r\nlet label;\r\nlet color;\r\n\r\nconst CardSummary = ({ props }) => {\r\n    const { name, product, status, active } = props;\r\n    const theme = useTheme();\r\n    if (status === 1) {\r\n        label = 'Запущена'\r\n        color = 'success'\r\n    } else if (status === 2) {\r\n        label = 'Авария'\r\n        color = 'error'\r\n    } else {\r\n        label = 'Остановлена'\r\n        color = 'secondary'\r\n    }\r\n\r\n    return (\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid container item justifyContent=\"space-between\" >\r\n                <Typography variant=\"h5\">{name}</Typography>\r\n                <Chip label={label} color={color} />\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography sx={{ mt: 1 }} variant=\"h5\" color=\"textSecondary\">{'Продукт: ' + product}</Typography>\r\n            </Grid>\r\n            <Box sx={{\r\n                position: 'absolute', left: '50%', top: '80%', right: 0, bottom: 0, color: theme.palette.secondary.main, transition: 'all 1s ease'\r\n            }}>\r\n                {/* {active ? <CaretUpOutlined style={{ '& path': 'all 1s ease' }} /> : <CaretDownOutlined style={{ transition: 'all 1s ease' }} />} */}\r\n                <CaretDownOutlined rotate={active ? 180 : 0} />\r\n            </Box>\r\n        </Grid >\r\n    );\r\n}\r\n\r\n\r\nexport default CardSummary;","import { Grid, Typography } from \"@mui/material\";\r\nimport priceFormatter from \"utils/priceFormatter\";\r\n\r\nconst HeaderContent = ({ props }) => {\r\n    const { name, value, unit } = props;\r\n    return (\r\n        <Grid item>\r\n            <Grid container direction={'column'} justifyContent={'center'} alignItems={'center'}>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" color={'secondary'}>{name}</Typography>\r\n                </Grid>\r\n                <Grid container item direction={'column'} sx={{ mt: 1.75 }} justifyContent={'center'} alignItems={'center'}>\r\n                    <Typography variant=\"h3\" >{priceFormatter(value) || 0}</Typography>\r\n                    <Typography sx={{ textAlign: 'center', mt: -0.5 }} variant=\"h6\" color={'secondary'}>{unit}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default HeaderContent;","import { Grid, Typography } from \"@mui/material\";\r\nimport { Progress } from \"antd\";\r\n\r\n\r\nconst Info = ({ percent, successPercent, theme }) => {\r\n    return (\r\n        <Grid container direction={'column'} sx={{ mt: 3, height: '100%', fontSize: 20 }} justifyContent={'center'} alignItems={'center'}>\r\n            <Grid item sx={{ fontSize: 20 }}>\r\n                <Typography align={'center'} sx={{\r\n                    fontWeight: 500,\r\n                    fontSize: '2.25rem',\r\n                    lineHeight: 1.21\r\n                }} color={theme.palette.primary.main}>{successPercent + \"%\"}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography align={'center'} variant=\"h5\" color={theme.palette.error[300]}>{percent + \"%\"}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst ProgressCircle = ({ props }) => {\r\n    const { width, percentExpected, percentSuccess, theme } = props;\r\n    return (\r\n        <Progress\r\n            format={(percent, successPercent) => <Info percent={percent} successPercent={successPercent} theme={theme} />}\r\n            strokeColor={theme.palette.error[300]}\r\n            percent={Math.floor(percentExpected)}\r\n            success={{ percent: Math.floor(percentSuccess), strokeColor: theme.palette.primary.main }}\r\n            type=\"circle\"\r\n            showInfo={true}\r\n            size={width}\r\n            trailColor={theme.palette.secondary[100]}\r\n            strokeWidth={7.5}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default ProgressCircle;","import { Box, Grid, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport MainCard from \"components/MainCard\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\nimport HeaderContent from \"../HeaderContent\";\r\nimport ProgressCircle from \"./ProgressCircle\";\r\n\r\nconst CardProgress = (props) => {\r\n    const { task, percentExpected, percentSuccess } = props;\r\n    const theme = useTheme();\r\n    const { width, ref } = useResizeDetector();\r\n    return (\r\n        <MainCard contentSX={{ p: 0, '&:last-child': { p: 0 } }} sx={{ height: '100%' }}>\r\n            <Stack>\r\n                <Grid container direction={'column'} justifyContent={'center'} alignItems={'center'} sx={{ p: 2.5, borderBottom: '1px solid #f0f0f0' }}>\r\n                    <HeaderContent props={task} />\r\n                </Grid>\r\n                <Grid container justifyContent={'center'} ref={ref}>\r\n                    <Grid item sx={{ pt: 3.75, pb: 3.75 }}>\r\n                        <ProgressCircle props={{ width: isNaN(width) || width * 0.67 > 250 ? 250 : width * 0.67, percentExpected, percentSuccess, theme }} />\r\n                    </Grid>\r\n                    <Grid direction={'column'} container item sx={{ p: 2.5, pt: 0 }}>\r\n                        <Grid container item justifyContent={\"center\"} alignItems={'center'}>\r\n                            <Box sx={{ width: 15, height: 15, backgroundColor: theme.palette.primary.main, borderRadius: \"4px\", mr: 1.25 }} color={\"secondary\"} />\r\n                            <Typography variant=\"h6\" color={'secondary'}>Факт</Typography>\r\n                        </Grid>\r\n                        <Grid container item sx={{ mt: 2 }} justifyContent={\"center\"} alignItems={'center'}>\r\n                            <Box sx={{ width: 15, height: 15, backgroundColor: theme.palette.error[300], borderRadius: \"4px\", mr: 1.25 }} color={\"secondary\"} />\r\n                            <Typography variant=\"h6\" color={'secondary'}>План</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Stack>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\n\r\nexport default CardProgress;","import { Button, Grid, List } from \"@mui/material\";\r\nimport MainCard from \"components/MainCard\";\r\nimport HeaderContent from \"../HeaderContent\";\r\nimport Content from \"./Content\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validateColor, { validateColorReverse } from \"utils/validateColor\";\r\n\r\n\r\nconst CardContent = ({ props }) => {\r\n    const { id, productName, value } = props;\r\n    const headerContent = value.slice(0, 3);\r\n    const bodyContent = value.slice(3);\r\n    const defectPercentage = Math.round(Number(headerContent[1].value) / (Number(headerContent[1].value) + Number(headerContent[2].value)) * 100);\r\n    const effPercentage = (headerContent[2].value * (1 / (bodyContent[0].value / 3600))) / bodyContent[1].value * 100;\r\n\r\n    return (\r\n        <MainCard contentSX={{ p: 0, '&:last-child': { p: 0 } }} sx={{ height: \"100%\" }}>\r\n            <Grid container sx={{ p: 2.5, borderBottom: '1px solid #f0f0f0' }} justifyContent={'space-around'} rowSpacing={3} columnSpacing={2}>\r\n                {headerContent.length > 0 ?\r\n                    headerContent.map((value) => <HeaderContent key={value.name} props={value} />)\r\n                    :\r\n                    <HeaderContent props={{ value: 'Данных нет' }} />\r\n                }\r\n            </Grid>\r\n            <Grid container sx={{ p: 2.5 }}>\r\n                <List sx={{ width: '100%', p: 0 }}>\r\n                    <Content props={{ name: 'Вид продукта', value: productName.product }} />\r\n                    {bodyContent.length > 0 ?\r\n                        <>\r\n                            <Content props={bodyContent[0]} />\r\n                            <Content props={bodyContent[1]} />\r\n                            <Content props={bodyContent[2]} />\r\n                            <Content props={{ ...bodyContent[3], color: validateColorReverse(94, 85, effPercentage), value: effPercentage }} />\r\n                            <Content props={{ ...bodyContent[4], color: validateColor(1, 3, defectPercentage), value: defectPercentage }} />\r\n                        </>\r\n                        :\r\n                        <Content key={bodyContent[4].value} props={{ value: 'Данных нет' }} />\r\n                    }\r\n                </List>\r\n                <Grid container justifyContent={'end'} mt={2}>\r\n                    <Link\r\n                        to={`/line/${id}`}\r\n                        state={{}}\r\n                        key={id}\r\n                    >\r\n                        <Button variant=\"contained\">Подробнее</Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard >\r\n    );\r\n}\r\n\r\n\r\nexport default CardContent;","import { Accordion, AccordionDetails, AccordionSummary, Grid, useTheme } from \"@mui/material\";\r\nimport CardSummary from \"./CardSummary\";\r\nimport CardProgress from \"./CardDetails/CardProgress\";\r\nimport Service from \"API/Service\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useMemo, useState } from \"react\";\r\nimport CardContent from \"./CardDetails/CardContent\";\r\n\r\n\r\nconst CardLine = ({ props }) => {\r\n    const { id, task, dataSummary, arrProgramPack, initialContent } = props;\r\n    const theme = useTheme();\r\n    const [content, setContent] = useState(initialContent);\r\n    const [active, setActive] = useState(false);\r\n\r\n\r\n    const { data } = useQuery(\r\n        ['arrProgram', arrProgramPack], () => Service.getProgramPackArray(arrProgramPack), {\r\n        select: (data) => data.p,\r\n        refetchInterval: 1000,\r\n        enabled: !!arrProgramPack,\r\n        refetchOnWindowFocus: false\r\n    });\r\n\r\n\r\n    useMemo(() => {\r\n        let cloneContent = content;\r\n        data?.forEach((element) => {\r\n            cloneContent?.forEach((el) => {\r\n                if (element._id === el.id) {\r\n                    el.value = element.lastAnswerDec;\r\n                }\r\n            });\r\n            setContent(cloneContent);\r\n        })\r\n    }, [data]);\r\n\r\n    return (\r\n        <Accordion sx={{\r\n            background: 'transparent', boxShadow: 'none'\r\n        }} onChange={() => setActive(!active)}>\r\n            <AccordionSummary\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                sx={{\r\n                    border: `1px solid ${theme.palette.grey.A800}`, borderRadius: '8px', p: 3, backgroundColor: \"#FFFFFF\",\r\n                    '.MuiAccordionSummary-content': {\r\n                        m: 0,\r\n                        \"&.Mui-expanded\": {\r\n                            m: 0\r\n                        },\r\n                    },\r\n                    '&:hover': {\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.04)'\r\n                    }\r\n                }}\r\n            >\r\n                <CardSummary props={{ ...dataSummary, active: active, status: Number(content[9].value) }} />\r\n            </AccordionSummary>\r\n            <AccordionDetails sx={{ background: \"transparent\", p: 0, mt: 2.75 }}>\r\n                <Grid container item spacing={2.75} alignItems={'stretch'}>\r\n                    <Grid item xs={12} sm={4} md={4} lg={3}>\r\n                        <CardProgress task={task} percentExpected={(Number(content[4].value) + Number(content[5].value)) * 1.7 / task.value * 100} percentSuccess={content[2].value / task.value * 100} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={8} md={8} lg={9}>\r\n                        <CardContent props={{ id: id, value: content, productName: dataSummary }} />\r\n                    </Grid>\r\n                </Grid>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default CardLine;","export const arrRequest = { programPack: ['647ead32652edbe984336ec6', '648c06abbd303e9d80166738', '647ebb41652edbe984336ed9', '648c06f4bd303e9d80166739', '648c0731bd303e9d8016673a', '648fe4ecbd303e9d8016673d', '648c0657bd303e9d80166737'] };\r\n\r\nexport const dataSummary = [\r\n    {\r\n        id: 1,\r\n        dataSummary: {\r\n            name: 'Линия 1 - стекло',\r\n            product: 'Беленькая 0,25',\r\n            status: 1\r\n        },\r\n        arrProgramPack: arrRequest,\r\n        task: {\r\n            name: 'Задание',\r\n            value: 18000,\r\n            unit: 'шт'\r\n        },\r\n        initialContent: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Брак',\r\n                value: 100000,\r\n                unit: 'шт',\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Произведено',\r\n                value: 1000000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                name: 'Плановая производительность',\r\n                value: 6200,\r\n                unit: 'шт/ч',\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы с начала задания',\r\n                value: 1000000,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя оборудования',\r\n                value: 78,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                name: 'Эффективность',\r\n                value: 95,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Брак',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Разность выполнения факт от плана',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                id: '648c0657bd303e9d80166737',\r\n                name: 'Статус линии',\r\n                value: 0,\r\n                unit: '',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        dataSummary: {\r\n            name: 'Линия 2 - ПЭТ',\r\n            product: 'Черноголовка 0,5',\r\n            status: 0\r\n        },\r\n        task: {\r\n            name: 'Задание',\r\n            value: 15000,\r\n            unit: 'шт'\r\n        },\r\n        initialContent: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Брак',\r\n                value: 100000,\r\n                unit: 'шт',\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Произведено',\r\n                value: 1000000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                name: 'Плановая производительность',\r\n                value: 6200,\r\n                unit: 'шт/ч',\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы с начала задания',\r\n                value: 1000000,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя оборудования',\r\n                value: 78,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                name: 'Эффективность',\r\n                value: 95,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Брак',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Разность выполнения факт от плана',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                id: '648c0657bd303e9d80166737',\r\n                name: 'Статус линии',\r\n                value: 0,\r\n                unit: '',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        dataSummary: {\r\n            name: 'Линия 3 - банки',\r\n            product: 'Квас 1,5',\r\n            status: 0\r\n        },\r\n        task: {\r\n            name: 'Задание',\r\n            value: 15000,\r\n            unit: 'шт'\r\n        },\r\n        initialContent: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Брак',\r\n                value: 100000,\r\n                unit: 'шт',\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Произведено',\r\n                value: 1000000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                name: 'Плановая производительность',\r\n                value: 6200,\r\n                unit: 'шт/ч',\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы с начала задания',\r\n                value: 1000000,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя оборудования',\r\n                value: 78,\r\n                unit: 'time',\r\n            },\r\n            {\r\n                name: 'Эффективность',\r\n                value: 95,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Брак',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                name: 'Разность выполнения факт от плана',\r\n                value: 5,\r\n                unit: '%',\r\n                progress: true\r\n            },\r\n            {\r\n                id: '648c0657bd303e9d80166737',\r\n                name: 'Статус линии',\r\n                value: 0,\r\n                unit: '',\r\n            }\r\n        ]\r\n    }\r\n]\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport CardLine from \"./CardLine\";\r\nimport { dataSummary } from \"assets/dataManufature\";\r\n\r\n\r\nconst Manufacture = () => {\r\n    return (\r\n        <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n                <Typography variant=\"h4\">Производство</Typography>\r\n            </Grid>\r\n            <Grid container item spacing={3}>\r\n                {\r\n                    dataSummary.map((el) =>\r\n                        <Grid key={el.dataSummary.name + 1} item xs={12} >\r\n                            <CardLine props={el} />\r\n                        </Grid>\r\n                    )\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\nexport default Manufacture;","const priceFormatter = new Intl.NumberFormat().format\r\nexport default priceFormatter;","export function zeroFormatter(hour, minutes, seconds) {\r\n   return ([\r\n      hour.toString().padStart(2, '0'),\r\n      minutes.toString().padStart(2, '0'),\r\n      seconds.toString().padStart(2, '0')\r\n   ].join(':'));\r\n}\r\n\r\nexport function secToTime(timeStamp) {\r\n   let h = Math.floor(timeStamp / 3600);\r\n   let m = Math.floor(timeStamp / 60) - (h * 60);\r\n   let s = Math.floor(timeStamp % 60);\r\n   return [h, m, s];\r\n}\r\n\r\nexport function decOfNum(number, titles) {\r\n   let decCache = [],\r\n      decCases = [2, 0, 1, 1, 1, 2];\r\n   if (!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\r\n   return titles[decCache[number]];\r\n}\r\n\r\nexport function timeFormattedString(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   let valueFormat = '';\r\n   if (h > 0) {\r\n      valueFormat = h + ' ' + decOfNum(h, ['час', 'часа', 'часов']);\r\n   }\r\n   if (m > 0) {\r\n      valueFormat += ' ' + m + ' ' + decOfNum(m, ['минута', 'минуты', 'минут']);\r\n   }\r\n   if (s > 0 && h === 0) {\r\n      valueFormat += ' ' + s + ' ' + decOfNum(s, ['секунда', 'секунды', 'секунд']);\r\n   }\r\n\r\n   return valueFormat;\r\n}\r\n\r\nexport function timeFormattedColon(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   return zeroFormatter(h, m, s);\r\n}","export default function validateColor(low, high, value) {\r\n    if (low >= value) {\r\n        return 'success'\r\n    } else if (value <= high) {\r\n        return 'warning'\r\n    } else if (value > high) {\r\n        return 'error'\r\n    }\r\n    return 'primary'\r\n}\r\n\r\nexport function validateColorReverse(low, high, value) {\r\n    if (value < high) {\r\n        return 'error'\r\n    } else if (low <= value) {\r\n        return 'success'\r\n    } else if (value >= high) {\r\n        return 'warning'\r\n    }\r\n    return 'primary'\r\n}"],"names":["_ref","valueFormat","props","name","value","progress","unit","color","theme","useTheme","matchDownMS","useMediaQuery","breakpoints","only","unitFormat","timeFormattedColon","timeFormattedString","String","isNaN","priceFormatter","_jsxs","ListItem","sx","p","pt","pb","borderBottom","flexWrap","children","_jsx","ListItemText","mr","primary","Typography","variant","textAlign","concat","Box","minWidth","display","alignItems","justifyContent","width","LinearProgress","Math","round","label","product","status","active","Grid","container","item","Chip","mt","position","left","top","right","bottom","palette","secondary","main","transition","CaretDownOutlined","rotate","direction","Info","percent","successPercent","height","fontSize","align","fontWeight","lineHeight","error","_ref2","percentExpected","percentSuccess","Progress","format","strokeColor","floor","success","type","showInfo","size","trailColor","strokeWidth","task","_useResizeDetector","useResizeDetector","ref","MainCard","contentSX","Stack","HeaderContent","ProgressCircle","backgroundColor","borderRadius","id","productName","headerContent","slice","bodyContent","defectPercentage","Number","effPercentage","rowSpacing","columnSpacing","length","map","List","Content","_Fragment","_objectSpread","validateColorReverse","validateColor","Link","to","state","Button","dataSummary","arrProgramPack","initialContent","_useState","useState","_useState2","_slicedToArray","content","setContent","_useState3","_useState4","setActive","_useQuery","useQuery","Service","select","data","refetchInterval","enabled","refetchOnWindowFocus","useMemo","cloneContent","forEach","element","el","_id","lastAnswerDec","Accordion","background","boxShadow","onChange","AccordionSummary","border","grey","A800","m","CardSummary","AccordionDetails","spacing","xs","sm","md","lg","CardProgress","CardContent","programPack","mb","CardLine","Intl","NumberFormat","secToTime","timeStamp","h","decOfNum","number","titles","decCache","min","_secToTime","_secToTime2","s","minutes","seconds","_secToTime3","_secToTime4","toString","padStart","join","low","high"],"sourceRoot":""}