{"version":3,"file":"static/js/762.a45bcbd9.chunk.js","mappings":"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","sources":["assets/dataLine.js","components/cards/ValueBox/ValueCard.js","components/charts/TimeAreaChart.js","components/tables/SortTable.js","utils/archiveAlarmSort.js","components/tables/AlarmSortTable.js","pages/Node/Index.js","utils/priceFormatter.js","utils/timeFormatter.js","utils/validateColor.js"],"sourcesContent":["const dataLine = [\r\n    {},\r\n    {\r\n        lineName: 'Линия 1 - стекло',\r\n        lineArray: ['647ead32652edbe984336ec6',\r\n            '647eadcf652edbe984336ec7',\r\n            '647eaeeb652edbe984336ec8',\r\n            '647eaf71652edbe984336ec9',\r\n            '647eb0e4652edbe984336eca',\r\n            '647eb204652edbe984336ecc',\r\n            '647eb472652edbe984336ecd',\r\n            '647eb583652edbe984336ece',\r\n            '647eb5cf652edbe984336ecf',\r\n            '647eb5f0652edbe984336ed0',\r\n            '647eb629652edbe984336ed1',\r\n            '647eb8a6652edbe984336ed2',\r\n            '647eb963652edbe984336ed3',\r\n            '647eb98a652edbe984336ed4',\r\n            '647eb9df652edbe984336ed5',\r\n            '647eba23652edbe984336ed6',\r\n            '647eba6a652edbe984336ed7',\r\n            '647ebaa4652edbe984336ed8',\r\n            '647ebb41652edbe984336ed9',\r\n            '647ebb6f652edbe984336eda',\r\n            '647ebb96652edbe984336edb',\r\n            '647ebc37652edbe984336edc',\r\n            '648c04f7bd303e9d80166735',\r\n            '648c060bbd303e9d80166736',\r\n            '648c0657bd303e9d80166737',\r\n            '648c06abbd303e9d80166738',\r\n            '648c06f4bd303e9d80166739',\r\n            '648c0731bd303e9d8016673a',\r\n            '648fe442bd303e9d8016673b',\r\n            '648fe491bd303e9d8016673c',\r\n            '648fe4ecbd303e9d8016673d'\r\n\r\n\r\n        ],\r\n        lineValue: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '647eadcf652edbe984336ec7',\r\n                name: 'Выпущено продукции',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648c06abbd303e9d80166738',\r\n                name: 'Количество брака',\r\n                value: 12000,\r\n                unit: 'шт',\r\n                additional: [\r\n                    {\r\n                        id: '647eadcf652edbe984336ec7',\r\n                        name: 'Выпущено продукции',\r\n                        value: 12000,\r\n                        unit: 'шт'\r\n                    }],\r\n                percentage() {\r\n                    return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                }\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Выпущено продукции за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Количество брака за смену',\r\n                value: 12000,\r\n                unit: 'шт',\r\n                additional: [\r\n                    {\r\n                        id: '647ebb41652edbe984336ed9',\r\n                        name: 'Выпущено продукции за смену',\r\n                        value: 12000,\r\n                        unit: 'шт'\r\n                    }],\r\n                percentage() {\r\n                    return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                }\r\n            },\r\n            {\r\n                id: '648c06f4bd303e9d80166739',\r\n                name: 'Время работы за смену',\r\n                value: 12000,\r\n                unit: 'time'\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя за смену',\r\n                value: 12000,\r\n                unit: 'time',\r\n                additional: [\r\n                    {\r\n                        id: '648c06f4bd303e9d80166739',\r\n                        name: 'Время работы за смену',\r\n                        value: 12000,\r\n                        unit: 'time'\r\n                    }],\r\n                percentage() {\r\n                    return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                }\r\n            },\r\n\r\n        ],\r\n        nodes: [\r\n            {\r\n                name: 'Этикеровочная машина',\r\n                _id: 1,\r\n                url: '/img/nodeImg/Labeling.png',\r\n                nodeArray: ['647eaf71652edbe984336ec9', '647eb0e4652edbe984336eca', '647eaeeb652edbe984336ec8', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eaf71652edbe984336ec9',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb0e4652edbe984336eca',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eaeeb652edbe984336ec8',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                },\r\n                ]\r\n            },\r\n            {\r\n                name: 'Сериализация',\r\n                _id: 2,\r\n                url: '/img/nodeImg/Serialization.png',\r\n                nodeArray: ['647eb204652edbe984336ecc', '647eb472652edbe984336ecd', '647eb583652edbe984336ece', '648c04f7bd303e9d80166735', '648fe442bd303e9d8016673b', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb204652edbe984336ecc',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb472652edbe984336ecd',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb583652edbe984336ece',\r\n                    name: 'Количество брака',\r\n                    value: 12000,\r\n                    unit: 'шт',\r\n                    additional: [\r\n                        {\r\n                            id: '647eb472652edbe984336ecd',\r\n                            name: 'Выпущено продукции',\r\n                            value: 12000,\r\n                            unit: 'шт'\r\n                        }],\r\n                    percentage() {\r\n                        return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                    }\r\n                },\r\n                {\r\n                    id: '648c04f7bd303e9d80166735',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648fe442bd303e9d8016673b',\r\n                    name: 'Количество брака за смену',\r\n                    value: 12000,\r\n                    unit: 'шт',\r\n                    additional: [\r\n                        {\r\n                            id: '648c04f7bd303e9d80166735',\r\n                            name: 'Выпущено продукции за смену',\r\n                            value: 12000,\r\n                            unit: 'шт'\r\n                        }],\r\n                    percentage() {\r\n                        return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                    }\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Делитель потока бутылок с доводчиком',\r\n                _id: 3,\r\n                url: '/img/nodeImg/Divider.png',\r\n                nodeArray: ['647eb5f0652edbe984336ed0', '647eb629652edbe984336ed1', '647eb5cf652edbe984336ecf', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb5f0652edbe984336ed0',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb629652edbe984336ed1',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb5cf652edbe984336ecf',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Портальный укладчик',\r\n                _id: 4,\r\n                url: '/img/nodeImg/Portal.png',\r\n                nodeArray: ['647eb963652edbe984336ed3', '647eb629652edbe984336ed1', '647eb8a6652edbe984336ed2', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb963652edbe984336ed3',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb629652edbe984336ed1',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb8a6652edbe984336ed2',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Гофроформирователь',\r\n                _id: 5,\r\n                url: '/img/nodeImg/CartomFormer.png',\r\n                nodeArray: ['647eb963652edbe984336ed3', '647eb629652edbe984336ed1', '647eb8a6652edbe984336ed2', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eb963652edbe984336ed3',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb629652edbe984336ed1',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb8a6652edbe984336ed2',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time',\r\n                }]\r\n            },\r\n            {\r\n                name: 'Агрегация',\r\n                _id: 6,\r\n                url: '/img/nodeImg/Agregation.png',\r\n                nodeArray: ['647eba23652edbe984336ed6', '647eb98a652edbe984336ed4', '647ebaa4652edbe984336ed8', '647eb9df652edbe984336ed5', '648fe491bd303e9d8016673c', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647eba23652edbe984336ed6',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647eb98a652edbe984336ed4',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ebaa4652edbe984336ed8',\r\n                    name: 'Количество брака',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647eb9df652edbe984336ed5',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648fe491bd303e9d8016673c',\r\n                    name: 'Количество брака за смену',\r\n                    value: 12000,\r\n                    unit: 'шт',\r\n                    additional: [\r\n                        {\r\n                            id: '647eb9df652edbe984336ed5',\r\n                            name: 'Выпущено продукции за смену',\r\n                            value: 12000,\r\n                            unit: 'шт'\r\n                        }],\r\n                    percentage: function () {\r\n                        return (this.value / this.additional[0].value * 100).toFixed(1)\r\n                    }\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Заклейщик',\r\n                _id: 7,\r\n                url: '/img/nodeImg/Sealer.png',\r\n                nodeArray: ['647ebb6f652edbe984336eda', '647ebb96652edbe984336edb', '647ebb41652edbe984336ed9', '648c0731bd303e9d8016673a'],\r\n                value: [{\r\n                    id: '647ebb6f652edbe984336eda',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647ebb96652edbe984336edb',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ebb41652edbe984336ed9',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '648c0731bd303e9d8016673a',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'time'\r\n                }]\r\n\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        lineName: 'Линия 2 - ПЭТ',\r\n        lineArray: [],\r\n        lineValue: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '647eadcf652edbe984336ec7',\r\n                name: 'Выпущено продукции',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Выпущено продукции за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Количество брака за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя за смену',\r\n                value: 12000,\r\n                unit: 'time'\r\n            },\r\n            {\r\n                id: '648c06abbd303e9d80166738',\r\n                name: 'Общее количество брака',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            }\r\n        ],\r\n        nodes: [\r\n            {\r\n                name: 'Этикеровочная машина',\r\n                url: '/img/nodeImg/Labeling.png',\r\n                value: [{\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                }]\r\n            },\r\n            {\r\n                name: 'Сериализация',\r\n                url: '/img/nodeImg/Serialization.png',\r\n                value: [{\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Производительность',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Выпущено продукции за смену',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Количество брака',\r\n                    value: 12000,\r\n                    unit: 'шт'\r\n                },\r\n                {\r\n                    id: '647ead32652edbe984336ec6',\r\n                    name: 'Время простоя за смену',\r\n                    value: 12000,\r\n                    unit: 'шт/ч'\r\n                }]\r\n            },\r\n\r\n        ],\r\n\r\n    },\r\n    {\r\n        lineName: 'Линия 3 - банки',\r\n        lineArray: [],\r\n        lineValue: [\r\n            {\r\n                id: '647ead32652edbe984336ec6',\r\n                name: 'Производительность',\r\n                value: 12000,\r\n                unit: 'шт/ч'\r\n            },\r\n            {\r\n                id: '647eadcf652edbe984336ec7',\r\n                name: 'Выпущено продукции',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '647ebb41652edbe984336ed9',\r\n                name: 'Выпущено продукции за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648fe4ecbd303e9d8016673d',\r\n                name: 'Количество брака за смену',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            },\r\n            {\r\n                id: '648c0731bd303e9d8016673a',\r\n                name: 'Время простоя за смену',\r\n                value: 12000,\r\n                unit: 'time'\r\n            },\r\n            {\r\n                id: '648c06abbd303e9d80166738',\r\n                name: 'Общее количество брака',\r\n                value: 12000,\r\n                unit: 'шт'\r\n            }\r\n        ],\r\n        nodes: [\r\n            {\r\n                name: 'Этикеровочная машина',\r\n                url: '/img/nodeImg/Labeling.png',\r\n                value: [{}]\r\n            },\r\n            {\r\n                name: 'Сериализация',\r\n                url: '/img/nodeImg/Serialization.png',\r\n                value: [{}]\r\n            }],\r\n    },\r\n];\r\n\r\nexport default dataLine;","// material-ui\r\nimport { Chip, Grid, Skeleton, Stack, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\nimport priceFormatter from 'utils/priceFormatter';\r\nimport { timeFormattedColon } from 'utils/timeFormatter';\r\nimport validateColor from 'utils/validateColor';\r\n\r\nconst format = (data) => {\r\n    let valueFormat, unitFormat = '';\r\n    const { value, unit } = data;\r\n\r\n    if (unit === 'time') {\r\n        if (value > 0) {\r\n            valueFormat = timeFormattedColon(value);\r\n        } else {\r\n            valueFormat = 0;\r\n        }\r\n    } else if (typeof value === 'string' || value instanceof String) {\r\n        valueFormat = value;\r\n    } else {\r\n        unitFormat = unit;\r\n        valueFormat = priceFormatter(value);\r\n    }\r\n\r\n    return { ...data, unit: unitFormat, value: valueFormat }\r\n}\r\n\r\nconst ValueCard = ({ data, low, high }) => (\r\n    <MainCard contentSX={{ p: 2.25 }}>\r\n        <Stack spacing={0.5}>\r\n            {\r\n                data?.name ?\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {data?.name}\r\n                    </Typography>\r\n                    :\r\n                    <Skeleton width=\"80%\" />\r\n            }\r\n            <Grid container alignItems=\"center\">\r\n                {data?.value !== 'undefined' ?\r\n                    <Grid item >\r\n                        <Grid container alignItems={'end'}>\r\n                            <Typography variant=\"h4\" color=\"inherit\">\r\n                                {`${format(data)?.value}`}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" sx={{ ml: 0.5, mb: 0.1 }} color=\"textSecondary\">\r\n                                {`${format(data)?.unit}`}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <Skeleton width=\"40%\" height={30} />\r\n                }\r\n\r\n                {data?.percentage && (\r\n                    <Grid item>\r\n                        <Chip\r\n                            variant=\"combined\"\r\n                            label={`${data?.percentage()}%`}\r\n                            sx={{ ml: 1.25, pl: 1, pr: 1 }}\r\n                            size=\"small\"\r\n                            color={validateColor(low, high, data?.percentage())}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Stack>\r\n    </MainCard>\r\n);\r\n\r\nValueCard.defaultProps = {\r\n    color: 'primary'\r\n};\r\n\r\nexport default ValueCard;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { useQuery } from 'react-query';\r\nimport Service from 'API/Service';\r\nimport moment from 'moment';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 450,\r\n        type: 'area',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 2\r\n    },\r\n    grid: {\r\n        strokeDashArray: 0\r\n    }\r\n};\r\n// ==============================|| INCOME AREA CHART ||============================== //\r\n\r\n\r\nconst TimeAreaChart = ({ queryData, name }) => {\r\n    const theme = useTheme();\r\n\r\n    const { secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n\r\n    const [series, setSeries] = useState([]);\r\n\r\n    const { isLoading } = useQuery(\r\n        ['chartData', queryData], () => Service.getArchive(queryData),\r\n        {\r\n            select: (data) => data.archive,\r\n            refetchOnWindowFocus: false,\r\n            onSuccess: (data) => {\r\n\r\n                const chartData = data?.map((element) => {\r\n                    return [element.date, element.dec];\r\n                })\r\n                console.log(data, chartData);\r\n                setSeries([\r\n                    {\r\n                        name,\r\n                        data: chartData\r\n                    },\r\n                ])\r\n            },\r\n            enabled: !!queryData\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            chart: {\r\n                id: 'area-datetime',\r\n                type: 'area',\r\n                width: \"100%\",\r\n                zoom: {\r\n                    autoScaleYaxis: true\r\n                },\r\n                events: {\r\n                    // markerClick: function (event, chartContext, { seriesIndex, dataPointIndex, config }) {\r\n                    //     console.log(event, chartContext.data.twoDSeries[dataPointIndex], seriesIndex, dataPointIndex, config);\r\n                    // }\r\n                }\r\n            },\r\n\r\n            colors: [theme.palette.primary.main],\r\n            xaxis: {\r\n                type: 'datetime',\r\n                tickAmount: 4,\r\n                tickPlacement: 'between',\r\n                labels: {\r\n                    style: {\r\n                        colors: [\r\n                            secondary\r\n                        ]\r\n                    },\r\n                    rotateAlways: false,\r\n                    formatter: function (value) {\r\n\r\n                        return `${moment(value).format('DD.MM.YYYY')} ${moment(value).format('HH:mm:ss')}`;\r\n                    },\r\n\r\n\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: line\r\n                },\r\n                // axisTicks: {\r\n                //     show: true,\r\n                //     borderType: 'solid',\r\n                //     color: '#78909C',\r\n                //     height: 6,\r\n                //     offsetX: 0,\r\n                //     offsetY: 0\r\n                // },\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line,\r\n                padding: {\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    left: 15\r\n                },\r\n            },\r\n            tooltip: {\r\n                theme: 'light',\r\n            },\r\n            noData: {\r\n                text: isLoading ? 'Загрузка' : \"Выберите временной отрезок\"\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\r\n};\r\n\r\nexport default TimeAreaChart;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { Table } from 'antd';\r\nimport moment from 'moment';\r\nimport ruRu from 'antd/locale/ru_RU';\r\nimport { timeFormattedColon } from 'utils/timeFormatter';\r\nimport { Button, Grid, Stack } from \"@mui/material\";\r\nimport { useQuery } from 'react-query';\r\nimport Service from 'API/Service';\r\nimport archiveAlarmSort from 'utils/archiveAlarmSort';\r\nimport { DateTimePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport 'dayjs/locale/ru';\r\nimport { ruRU } from '@mui/x-date-pickers/locales';\r\n\r\nconst formatDate = (date) => moment(date).format('HH:mm:ss DD.MM.YYYY');\r\n\r\nconst initialDate = {\r\n    dateStart: null,\r\n    dateStop: null\r\n};\r\n\r\nconst SortTable = ({ id }) => {\r\n    const [date, setDate] = useState(initialDate);\r\n    const [queryData, setQueryData] = useState({ id });\r\n\r\n    const handleSubmit = (FilterDropdownProps) => {\r\n        FilterDropdownProps.confirm();\r\n        const query = {};\r\n        if (date.dateStart !== null) query.dateStart = date.dateStart;\r\n        if (date.dateStop !== null) query.period = date.dateStop - date.dateStart;\r\n        setQueryData({\r\n            id,\r\n            ...query\r\n        })\r\n\r\n    }\r\n\r\n    const handleReset = (FilterDropdownProps) => {\r\n        FilterDropdownProps.clearFilters();\r\n        setDate(initialDate);\r\n    }\r\n\r\n    const handleDate = (date, FilterDropdownProps) => {\r\n        FilterDropdownProps.setSelectedKeys('true');\r\n        setDate(date);\r\n    }\r\n\r\n    const { data: rawData, isLoading } = useQuery(\r\n        ['archiveError1', queryData], () => Service.getArchiveAlarm(queryData),\r\n        {\r\n            select: (data) => {\r\n                return archiveAlarmSort(data.errorArchive);\r\n            },\r\n            refetchOnWindowFocus: false,\r\n            enabled: !!queryData.id\r\n        }\r\n    );\r\n    const data = useMemo(() =>\r\n        rawData?.map((el) => {\r\n            return {\r\n                ...el, dateFormat: formatDate(el.date),\r\n                date2Format: el.date2 ? formatDate(el.date2) : '-',\r\n                timeStop: el.date2 && el.date2 - el.date,\r\n                timeStopFormat: el.date2 ? timeFormattedColon(((el.date2 - el.date) / 1000)) : '-'\r\n            }\r\n        }),\r\n        [rawData]);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Дата',\r\n            dataIndex: 'dateFormat',\r\n            key: 'date',\r\n            width: 150,\r\n            align: 'center',\r\n            sorter: (a, b) => a.date - b.date,\r\n            filters: [{ dateStart: '', dateStop: '' }],\r\n            filterDropdown: (FilterDropdownProps) => {\r\n                return (\r\n                    <Grid>\r\n                        <Stack spacing={1.5} sx={{ p: 1 }}>\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ru\" localeText={ruRU.components.MuiLocalizationProvider.defaultProps.localeText}>\r\n                                <DateTimePicker value={date.dateStart} autoFocus={true} sx={{ mt: 1 }}\r\n                                    label=\"Начальная дата\"\r\n                                    onChange={e => handleDate({ ...date, dateStart: e.$d.valueOf() }, FilterDropdownProps)} />\r\n                                <DateTimePicker value={date.dateStop} sx={{ mt: 1 }}\r\n                                    label=\"Конечная дата\"\r\n                                    onChange={e => handleDate({ ...date, dateStop: e.$d.valueOf() }, FilterDropdownProps)} />\r\n                            </LocalizationProvider>\r\n\r\n                        </Stack>\r\n                        <Grid container justifyContent={'space-between'} sx={{ p: 1 }}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                color=\"primary\"\r\n                                onClick={() => handleReset(FilterDropdownProps)}\r\n                                size=\"small\"\r\n                                disabled={FilterDropdownProps.selectedKeys.length === 0}\r\n                            >\r\n                                Сбросить\r\n                            </Button>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => handleSubmit(FilterDropdownProps)}\r\n                                size=\"small\"\r\n                            >\r\n                                ОК\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            },\r\n        },\r\n\r\n        {\r\n            title: 'Сообщения',\r\n            dataIndex: 'message',\r\n            key: 'message',\r\n            width: 300,\r\n            filters: [\r\n                { text: 'Заклейщик. Расходные материалы на исходе', value: 'Заклейщик. Расходные материалы на исходе' },\r\n                { text: 'Укладка. Ошибка сервопривода', value: 'Укладка. Ошибка сервопривода' },\r\n            ],\r\n            // filteredValue: filteredInfo.message || null,\r\n            onFilter: (value, record) => record.message.includes(value),\r\n            // sorter: (a, b) => a.message.length - b.message.length,\r\n        },\r\n        {\r\n            title: 'Дата восстановления',\r\n            dataIndex: 'date2Format',\r\n            key: 'date2',\r\n            width: 150,\r\n            align: 'center',\r\n            sorter: (a, b) => a.date2 - b.date2,\r\n        },\r\n        {\r\n            title: 'Время простоя',\r\n            dataIndex: 'timeStopFormat',\r\n            key: 'timeStop',\r\n            width: 150,\r\n            align: 'center',\r\n            sorter: (a, b) => a.timeStop - b.timeStop,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            locale={ruRu.Table}\r\n            columns={columns}\r\n            dataSource={data}\r\n            size='medium'\r\n            pagination={false}\r\n            scroll={{ y: 450, x: 600 }}\r\n            tableLayout='auto'\r\n            loading={isLoading}\r\n        // rowClassName={(record, index) => record.bit === 2 ? 'colorIcon' : record.bit === 12 ? 'colorIconWarning' : ''}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SortTable;","\r\nexport default function archiveAlarmSort(data) {\r\n    let arr = Object.assign([], data);\r\n    arr.reverse();\r\n    let arr2 = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].status) {\r\n            for (let j = 0 + i; j < arr.length; j++) {\r\n                if (!arr[j].status && (arr[i].bit === arr[j].bit)) {\r\n                    arr2.push({ ...arr[i], date2: arr[j].date });\r\n                    break;\r\n                }\r\n                if (j === arr.length - 1) {\r\n                    arr2.push({ ...arr[i], date2: null });\r\n                    console.log(true)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return arr2.reverse();\r\n}","import SortTable from \"./SortTable\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport MainCard from \"components/MainCard\";\r\n\r\nconst AlarmSortTable = ({ id }) => {\r\n    return (\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n                <Typography variant=\"h4\">Аварийные события</Typography>\r\n            </Grid>\r\n            <MainCard content={false} sx={{ mt: 2 }}>\r\n                <SortTable id={id} />\r\n            </MainCard>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AlarmSortTable;","import { CircularProgress, Grid, Typography } from \"@mui/material\";\r\nimport Service from \"API/Service\";\r\nimport dataLine from \"assets/dataLine\";\r\nimport MainCard from \"components/MainCard\";\r\nimport ValueCard from \"components/cards/ValueBox/ValueCard\";\r\nimport TimeAreaChart from \"components/charts/TimeAreaChart\";\r\nimport AlarmSortTable from \"components/tables/AlarmSortTable\";\r\nimport { useMemo, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst id = \"647ea168652edbe984336ebf\";\r\n\r\nconst Node = () => {\r\n    const { state } = useLocation();\r\n    const [nodeData, setNodeData] = useState(dataLine[Number(state?.idLine)]?.nodes[state?._id - 1]?.value);\r\n\r\n    const { isLoading, data } = useQuery(\r\n        ['arrProgramNode', { programPack: state?.nodeArray }], () => Service.getProgramPackArray({ programPack: state?.nodeArray }), {\r\n        select: (data) => data.p,\r\n        refetchInterval: 1000,\r\n        enabled: state?.nodeArray?.length !== 0,\r\n        refetchOnWindowFocus: false\r\n    });\r\n\r\n    useMemo(() => {\r\n        let cloneContent = nodeData;\r\n        data?.forEach((element) => {\r\n            cloneContent?.forEach((el) => {\r\n                if (element._id === el.id) {\r\n                    el.value = element.lastAnswerDec;\r\n                }\r\n                el.additional && el.additional?.forEach((additionalEl) => {\r\n                    if (element._id === additionalEl.id) {\r\n                        additionalEl.value = Number(element.lastAnswerDec);\r\n                    }\r\n                })\r\n            });\r\n            setNodeData(cloneContent);\r\n        })\r\n    }, [data]);\r\n\r\n    const [queryData, setQueryData] = useState({\r\n        dateStart: Date.now() - 36000 * 1000,\r\n        period: 36000 * 1,\r\n        id: '647ead32652edbe984336ec6'\r\n    });\r\n\r\n    return (\r\n        <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            {\r\n                isLoading ?\r\n                    <Grid item xs={12} container justifyContent={'center'} alignItems={'center'}>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                    :\r\n                    <>\r\n                        <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n                            <Typography variant=\"h4\">{state?.name}</Typography>\r\n                        </Grid>\r\n                        <Grid container item spacing={3}>\r\n                            {nodeData?.map((el) =>\r\n                                <Grid key={el.id} item xs={12} sm={6} md={4} lg={3}>\r\n                                    <ValueCard data={el} low={1} high={3} />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <AlarmSortTable id={id} />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} lg={12} sx={{ mb: -2.25 }}>\r\n                            <Grid container >\r\n                                <Typography variant=\"h4\">{'График'}</Typography>\r\n                            </Grid>\r\n                            <MainCard content={false} sx={{ mt: 2 }}>\r\n                                <TimeAreaChart queryData={queryData} name={'Производительность'} />\r\n                            </MainCard>\r\n                        </Grid>\r\n                    </>\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\nexport default Node;","const priceFormatter = new Intl.NumberFormat().format\r\nexport default priceFormatter;","export function zeroFormatter(hour, minutes, seconds) {\r\n   return ([\r\n      hour.toString().padStart(2, '0'),\r\n      minutes.toString().padStart(2, '0'),\r\n      seconds.toString().padStart(2, '0')\r\n   ].join(':'));\r\n}\r\n\r\nexport function secToTime(timeStamp) {\r\n   let h = Math.floor(timeStamp / 3600);\r\n   let m = Math.floor(timeStamp / 60) - (h * 60);\r\n   let s = Math.floor(timeStamp % 60);\r\n   return [h, m, s];\r\n}\r\n\r\nexport function decOfNum(number, titles) {\r\n   let decCache = [],\r\n      decCases = [2, 0, 1, 1, 1, 2];\r\n   if (!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\r\n   return titles[decCache[number]];\r\n}\r\n\r\nexport function timeFormattedString(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   let valueFormat = '';\r\n   if (h > 0) {\r\n      valueFormat = h + ' ' + decOfNum(h, ['час', 'часа', 'часов']);\r\n   }\r\n   if (m > 0) {\r\n      valueFormat += ' ' + m + ' ' + decOfNum(m, ['минута', 'минуты', 'минут']);\r\n   }\r\n   if (s > 0 && h === 0) {\r\n      valueFormat += ' ' + s + ' ' + decOfNum(s, ['секунда', 'секунды', 'секунд']);\r\n   }\r\n\r\n   return valueFormat;\r\n}\r\n\r\nexport function timeFormattedColon(timeStamp) {\r\n   const [h, m, s] = secToTime(timeStamp);\r\n   return zeroFormatter(h, m, s);\r\n}","export default function validateColor(low, high, value) {\r\n    if (low >= value) {\r\n        return 'success'\r\n    } else if (value <= high) {\r\n        return 'warning'\r\n    } else if (value > high) {\r\n        return 'error'\r\n    }\r\n    return 'primary'\r\n}\r\n\r\nexport function validateColorReverse(low, high, value) {\r\n    if (value < high) {\r\n        return 'error'\r\n    } else if (low <= value) {\r\n        return 'success'\r\n    } else if (value >= high) {\r\n        return 'warning'\r\n    }\r\n    return 'primary'\r\n}"],"names":["lineName","lineArray","lineValue","id","name","value","unit","additional","percentage","this","toFixed","nodes","_id","url","nodeArray","format","data","valueFormat","unitFormat","timeFormattedColon","String","priceFormatter","_objectSpread","ValueCard","_ref","_format","_format2","low","high","_jsx","MainCard","contentSX","p","children","_jsxs","Stack","spacing","Typography","variant","color","Skeleton","width","Grid","container","alignItems","item","concat","sx","ml","mb","height","Chip","label","pl","pr","size","validateColor","defaultProps","areaChartOptions","chart","type","toolbar","show","dataLabels","enabled","stroke","curve","grid","strokeDashArray","queryData","theme","useTheme","secondary","palette","text","line","divider","_useState","useState","_useState2","_slicedToArray","options","setOptions","_useState3","_useState4","series","setSeries","isLoading","useQuery","Service","select","archive","refetchOnWindowFocus","onSuccess","chartData","map","element","date","dec","console","log","useEffect","prevState","zoom","autoScaleYaxis","events","colors","primary","main","xaxis","tickAmount","tickPlacement","labels","style","rotateAlways","formatter","moment","axisBorder","yaxis","borderColor","padding","top","right","bottom","left","tooltip","noData","ReactApexChart","formatDate","initialDate","dateStart","dateStop","setDate","setQueryData","handleDate","FilterDropdownProps","setSelectedKeys","_useQuery","arr","Object","assign","reverse","arr2","i","length","status","j","bit","push","date2","archiveAlarmSort","errorArchive","rawData","useMemo","el","dateFormat","date2Format","timeStop","timeStopFormat","columns","title","dataIndex","key","align","sorter","a","b","filters","filterDropdown","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","localeText","ruRU","DateTimePicker","autoFocus","mt","onChange","e","$d","valueOf","justifyContent","Button","onClick","clearFilters","handleReset","disabled","selectedKeys","confirm","query","period","handleSubmit","onFilter","record","message","includes","Table","locale","ruRu","dataSource","pagination","scroll","y","x","tableLayout","loading","content","SortTable","_dataLine$Number","_dataLine$Number$node","_state$nodeArray","state","useLocation","dataLine","Number","idLine","nodeData","setNodeData","programPack","refetchInterval","cloneContent","forEach","_el$additional","lastAnswerDec","additionalEl","Date","now","rowSpacing","columnSpacing","xs","CircularProgress","_Fragment","sm","md","lg","AlarmSortTable","TimeAreaChart","Intl","NumberFormat","secToTime","timeStamp","h","Math","floor","decOfNum","number","titles","decCache","min","timeFormattedString","_secToTime","_secToTime2","m","s","minutes","seconds","_secToTime3","_secToTime4","toString","padStart","join","validateColorReverse"],"sourceRoot":""}